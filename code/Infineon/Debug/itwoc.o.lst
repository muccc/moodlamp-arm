   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"itwoc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USIC0_1_IRQHandler,"ax",%progbits
  18              		.align	1
  19              		.global	USIC0_1_IRQHandler
  20              		.code	16
  21              		.thumb_func
  23              	USIC0_1_IRQHandler:
  24              	.LFB38:
  25              		.file 1 "../itwoc.c"
   1:../itwoc.c    **** /*
   2:../itwoc.c    ****  * itwoc.c
   3:../itwoc.c    ****  *
   4:../itwoc.c    ****  *  Created on: Jul 14, 2014
   5:../itwoc.c    ****  *      Author: ChiaJiaY
   6:../itwoc.c    ****  */
   7:../itwoc.c    **** 
   8:../itwoc.c    **** 
   9:../itwoc.c    **** #include "itwoc.h"
  10:../itwoc.c    **** #include <Dave3.h>
  11:../itwoc.c    **** 
  12:../itwoc.c    **** 
  13:../itwoc.c    **** #define GET_MASK_FOR_1CHANNEL(N1) (1UL<<N1)
  14:../itwoc.c    **** #define INTENSITY_RED             (0x11U) //0
  15:../itwoc.c    **** #define INTENSITY_GREEN           (0x12U) //1
  16:../itwoc.c    **** #define INTENSITY_BLUE			  (0x13U) //2
  17:../itwoc.c    **** #define INTENSITY_RGB             (0x14U)
  18:../itwoc.c    **** #define CURRENT_RED               (0x21U) //3
  19:../itwoc.c    **** #define CURRENT_GREEN             (0x22U) //4
  20:../itwoc.c    **** #define CURRENT_BLUE              (0x23U) //5
  21:../itwoc.c    **** #define CURRENT_RGB               (0x24U)
  22:../itwoc.c    **** #define DMX0FF					  (0x30U) //6
  23:../itwoc.c    **** #define DMXON             		  (0x31U)
  24:../itwoc.c    **** #define DMXSLOT					  (0x32U) //7
  25:../itwoc.c    **** #define DMX8BIT                   (0x33U) //8 9 10 11
  26:../itwoc.c    **** #define DMX16BIT                  (0x34U)
  27:../itwoc.c    **** #define OFFTIME_RED               (0x41U) //12
  28:../itwoc.c    **** #define OFFTIME_GREEN             (0x42U) //13
  29:../itwoc.c    **** #define OFFTIME_BLUE		   	  (0x43U) //14
  30:../itwoc.c    **** #define WALKTIME                  (0x50U) //15
  31:../itwoc.c    **** #define DIMMINGLEVEL              (0x60U) //16
  32:../itwoc.c    **** #define FADERATE                  (0x61U) //17
  33:../itwoc.c    **** #define CHANGEADDRESS             (0x70U) //18
  34:../itwoc.c    **** 
  35:../itwoc.c    **** #define READ_CONFIG               (0x80U)
  36:../itwoc.c    **** #define READ_INTENSITY_RED        (0x81U)
  37:../itwoc.c    **** #define READ_INTENSITY_GREEN      (0x82U)
  38:../itwoc.c    **** #define READ_INTENSITY_BLUE		  (0x83U)
  39:../itwoc.c    **** #define READ_CURRENT_RED          (0x84U)
  40:../itwoc.c    **** #define READ_CURRENT_GREEN        (0x85U)
  41:../itwoc.c    **** #define READ_CURRENT_BLUE         (0x86U)
  42:../itwoc.c    **** #define READ_OFFTIME_RED          (0x87U)
  43:../itwoc.c    **** #define READ_OFFTIME_GREEN        (0x88U)
  44:../itwoc.c    **** #define READ_OFFTIME_BLUE		  (0x89U)
  45:../itwoc.c    **** #define READ_WALKTIME             (0x8AU)
  46:../itwoc.c    **** #define READ_DIMMINGLEVEL         (0x8BU)
  47:../itwoc.c    **** #define READ_FADERATE             (0x8CU)
  48:../itwoc.c    **** #define READ_DMX             	  (0x8DU)
  49:../itwoc.c    **** #define READ_DMXSLOT			  (0x8EU)
  50:../itwoc.c    **** #define READ_DMXBIT               (0x8FU)
  51:../itwoc.c    **** 
  52:../itwoc.c    **** 
  53:../itwoc.c    **** #define DIRECTACCESS_READ         (0x90U)
  54:../itwoc.c    **** #define DIRECTACCESS_MOVE   	  (0x91U)
  55:../itwoc.c    **** #define DIRECTACCESS_AND          (0x92U)
  56:../itwoc.c    **** #define DIRECTACCESS_OR           (0x93U)
  57:../itwoc.c    **** 
  58:../itwoc.c    **** #define SAVEPARAMETERS            (0xA0U)
  59:../itwoc.c    **** 
  60:../itwoc.c    **** I2C003_DataType data1, data2, data3, data4, data5;
  61:../itwoc.c    **** void FIFO_Receive_Int_Handler(void)
  62:../itwoc.c    **** {
  26              		.loc 1 62 0
  27              		.cfi_startproc
  28 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 20
  31              		.cfi_offset 4, -20
  32              		.cfi_offset 5, -16
  33              		.cfi_offset 6, -12
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  63:../itwoc.c    **** 	uint8_t DataReceived = 0x00;
  64:../itwoc.c    **** 	I2C003_ClearFlag(&I2C003_Handle0, I2C003_FLAG_RIF);
  36              		.loc 1 64 0
  37 0002 C54C     		ldr	r4, .L92
  62:../itwoc.c    **** {
  38              		.loc 1 62 0
  39 0004 85B0     		sub	sp, sp, #20
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 40
  63:../itwoc.c    **** 	uint8_t DataReceived = 0x00;
  42              		.loc 1 63 0
  43 0006 6E46     		mov	r6, sp
  44 0008 0023     		mov	r3, #0
  45              		.loc 1 64 0
  46 000a 201C     		mov	r0, r4
  63:../itwoc.c    **** 	uint8_t DataReceived = 0x00;
  47              		.loc 1 63 0
  48 000c 0F36     		add	r6, r6, #15
  49              		.loc 1 64 0
  50 000e 0421     		mov	r1, #4
  63:../itwoc.c    **** 	uint8_t DataReceived = 0x00;
  51              		.loc 1 63 0
  52 0010 3370     		strb	r3, [r6]
  53              	.LVL0:
  54              		.loc 1 64 0
  55 0012 FFF7FEFF 		bl	I2C003_ClearFlag
  56              	.LVL1:
  65:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->TRBSCR |= USIC_CH_TRBSCR_CSRBI_Msk;
  57              		.loc 1 65 0
  58 0016 2568     		ldr	r5, [r4]
  59 0018 0127     		mov	r7, #1
  60 001a 281C     		mov	r0, r5
  61 001c FC30     		add	r0, r0, #252
  62 001e C269     		ldr	r2, [r0, #28]
  66:../itwoc.c    **** 	I2C003_ReadData(&I2C003_Handle0,&DataReceived);  // Read receive FIFO buffer, put the data in Data
  63              		.loc 1 66 0
  64 0020 311C     		mov	r1, r6
  65:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->TRBSCR |= USIC_CH_TRBSCR_CSRBI_Msk;
  65              		.loc 1 65 0
  66 0022 3A43     		orr	r2, r7
  67 0024 C261     		str	r2, [r0, #28]
  68              		.loc 1 66 0
  69 0026 201C     		mov	r0, r4
  70 0028 FFF7FEFF 		bl	I2C003_ReadData
  71              	.LVL2:
  67:../itwoc.c    **** 
  68:../itwoc.c    **** 	if (byteCount == 0) // Taking in Command
  72              		.loc 1 68 0
  73 002c BB4C     		ldr	r4, .L92+4
  74 002e 2368     		ldr	r3, [r4]
  75 0030 002B     		cmp	r3, #0
  76 0032 22D1     		bne	.L2
  69:../itwoc.c    **** 	{
  70:../itwoc.c    **** 		Command = (DataReceived & 0x00FF);
  77              		.loc 1 70 0
  78 0034 3278     		ldrb	r2, [r6]
  79 0036 BA49     		ldr	r1, .L92+8
  71:../itwoc.c    **** 		DataUpper = 0x00;
  80              		.loc 1 71 0
  81 0038 BA4E     		ldr	r6, .L92+12
  72:../itwoc.c    **** 		DataLower = 0x00;
  82              		.loc 1 72 0
  83 003a BB48     		ldr	r0, .L92+16
  70:../itwoc.c    **** 		Command = (DataReceived & 0x00FF);
  84              		.loc 1 70 0
  85 003c 0A70     		strb	r2, [r1]
  71:../itwoc.c    **** 		DataUpper = 0x00;
  86              		.loc 1 71 0
  87 003e 3370     		strb	r3, [r6]
  88              		.loc 1 72 0
  89 0040 0370     		strb	r3, [r0]
  73:../itwoc.c    **** 		byteCount++;
  90              		.loc 1 73 0
  91 0042 2760     		str	r7, [r4]
  74:../itwoc.c    **** 
  75:../itwoc.c    **** 		if (Command == DMX0FF) // If DMXOFF sent, off the DMX control
  92              		.loc 1 75 0
  93 0044 302A     		cmp	r2, #48
  94 0046 05D1     		bne	.L3
  76:../itwoc.c    **** 		{
  77:../itwoc.c    **** 			DMXControl = 0;
  95              		.loc 1 77 0
  96 0048 B84F     		ldr	r7, .L92+20
  78:../itwoc.c    **** 			byteCount = 0;
  79:../itwoc.c    **** 			flashBuffer[7] = 0; // writing to buffer maintaining flash parameters
  97              		.loc 1 79 0
  98 004a B949     		ldr	r1, .L92+24
  77:../itwoc.c    **** 			DMXControl = 0;
  99              		.loc 1 77 0
 100 004c 3B60     		str	r3, [r7]
  78:../itwoc.c    **** 			byteCount = 0;
 101              		.loc 1 78 0
 102 004e 2360     		str	r3, [r4]
 103              		.loc 1 79 0
 104 0050 CB61     		str	r3, [r1, #28]
 105 0052 39E0     		b	.L4
 106              	.L3:
  80:../itwoc.c    **** 		}
  81:../itwoc.c    **** 
  82:../itwoc.c    **** 		else if (Command == DMXON)
 107              		.loc 1 82 0
 108 0054 312A     		cmp	r2, #49
 109 0056 05D1     		bne	.L5
  83:../itwoc.c    **** 		{
  84:../itwoc.c    **** 			DMXControl = 1;
 110              		.loc 1 84 0
 111 0058 B44A     		ldr	r2, .L92+20
  85:../itwoc.c    **** 			byteCount = 0;
  86:../itwoc.c    **** 			flashBuffer[7] = 1;
 112              		.loc 1 86 0
 113 005a B548     		ldr	r0, .L92+24
  84:../itwoc.c    **** 			DMXControl = 1;
 114              		.loc 1 84 0
 115 005c 1760     		str	r7, [r2]
  85:../itwoc.c    **** 			byteCount = 0;
 116              		.loc 1 85 0
 117 005e 2360     		str	r3, [r4]
 118              		.loc 1 86 0
 119 0060 C761     		str	r7, [r0, #28]
 120 0062 31E0     		b	.L4
 121              	.L5:
  87:../itwoc.c    **** 		}
  88:../itwoc.c    **** 
  89:../itwoc.c    **** 		else if (Command == 0x80 || Command == 0x81 || Command == 0x82 || Command == 0x83 || Command == 0
 122              		.loc 1 89 0
 123 0064 111C     		mov	r1, r2
 124 0066 8039     		sub	r1, r1, #128
 125 0068 CEB2     		uxtb	r6, r1
 126 006a 0F2E     		cmp	r6, #15
 127 006c 2BD9     		bls	.L81
 128              	.L6:
  90:../itwoc.c    **** 		{
  91:../itwoc.c    **** 
  92:../itwoc.c    **** 			byteCount = 0;
  93:../itwoc.c    **** 			// Commands for slave to send back relevant data to master
  94:../itwoc.c    **** 			// 0x71 0x72 0x73: RGB Intensity
  95:../itwoc.c    **** 			// 0x74 0x75 0x76: RGB Current
  96:../itwoc.c    **** 			// 0x77: Walktime
  97:../itwoc.c    **** 			// 0x78: Dimming
  98:../itwoc.c    **** 			// 0x79: Fade Rate
  99:../itwoc.c    **** 		}
 100:../itwoc.c    **** 
 101:../itwoc.c    **** 		else if (Command == SAVEPARAMETERS)
 129              		.loc 1 101 0
 130 006e A02A     		cmp	r2, #160
 131 0070 2AD1     		bne	.L4
 102:../itwoc.c    **** 		{
 103:../itwoc.c    **** 			byteCount = 0;
 132              		.loc 1 103 0
 133 0072 2360     		str	r3, [r4]
 104:../itwoc.c    **** 			writeToFlash = 1;
 134              		.loc 1 104 0
 135 0074 AF4B     		ldr	r3, .L92+28
 136 0076 1F60     		str	r7, [r3]
 137 0078 26E0     		b	.L4
 138              	.L2:
 105:../itwoc.c    **** 		}
 106:../itwoc.c    **** 
 107:../itwoc.c    **** 	}
 108:../itwoc.c    **** 
 109:../itwoc.c    **** 	else if (byteCount == 1 || byteCount == 3 || byteCount == 5 || byteCount == 7 || byteCount == 9 ||
 139              		.loc 1 109 0
 140 007a 012B     		cmp	r3, #1
 141 007c 09D0     		beq	.L8
 142              		.loc 1 109 0 is_stmt 0 discriminator 1
 143 007e 032B     		cmp	r3, #3
 144 0080 07D0     		beq	.L8
 145 0082 052B     		cmp	r3, #5
 146 0084 05D0     		beq	.L8
 147 0086 072B     		cmp	r3, #7
 148 0088 03D0     		beq	.L8
 149 008a 092B     		cmp	r3, #9
 150 008c 01D0     		beq	.L8
 151 008e 0B2B     		cmp	r3, #11
 152 0090 03D1     		bne	.L9
 153              	.L8:
 110:../itwoc.c    **** 	{
 111:../itwoc.c    **** 		DataUpper = (DataReceived & 0x00FF);
 154              		.loc 1 111 0 is_stmt 1
 155 0092 3678     		ldrb	r6, [r6]
 156              	.LVL3:
 157 0094 A348     		ldr	r0, .L92+12
 158              	.LVL4:
 159 0096 0670     		strb	r6, [r0]
 160 0098 14E0     		b	.L82
 161              	.LVL5:
 162              	.L9:
 112:../itwoc.c    **** 		byteCount++;
 113:../itwoc.c    **** 
 114:../itwoc.c    **** 	}
 115:../itwoc.c    **** 	else if (byteCount == 2 || byteCount == 4 || byteCount == 6 || byteCount == 8 || byteCount == 10 |
 163              		.loc 1 115 0
 164 009a 022B     		cmp	r3, #2
 165 009c 09D0     		beq	.L10
 166              		.loc 1 115 0 is_stmt 0 discriminator 1
 167 009e 042B     		cmp	r3, #4
 168 00a0 07D0     		beq	.L10
 169 00a2 062B     		cmp	r3, #6
 170 00a4 05D0     		beq	.L10
 171 00a6 082B     		cmp	r3, #8
 172 00a8 03D0     		beq	.L10
 173 00aa 0A2B     		cmp	r3, #10
 174 00ac 01D0     		beq	.L10
 175 00ae 0C2B     		cmp	r3, #12
 176 00b0 0AD1     		bne	.L4
 177              	.L10:
 116:../itwoc.c    **** 	{
 117:../itwoc.c    **** 		DataLower = (DataReceived & 0x00FF);
 118:../itwoc.c    **** 		DataTotal = (uint16_t) (DataUpper << 8 ) | DataLower; // upper 8 bits, shift left by 8 bits
 178              		.loc 1 118 0 is_stmt 1
 179 00b2 9C48     		ldr	r0, .L92+12
 117:../itwoc.c    **** 		DataLower = (DataReceived & 0x00FF);
 180              		.loc 1 117 0
 181 00b4 3678     		ldrb	r6, [r6]
 182 00b6 9C49     		ldr	r1, .L92+16
 183              		.loc 1 118 0
 184 00b8 0278     		ldrb	r2, [r0]
 117:../itwoc.c    **** 		DataLower = (DataReceived & 0x00FF);
 185              		.loc 1 117 0
 186 00ba 0E70     		strb	r6, [r1]
 187              		.loc 1 118 0
 188 00bc 1702     		lsl	r7, r2, #8
 189 00be 9E49     		ldr	r1, .L92+32
 190 00c0 3E43     		orr	r6, r7
 191 00c2 0E80     		strh	r6, [r1]
 192              	.LVL6:
 193              	.L82:
 119:../itwoc.c    **** 		byteCount ++;
 194              		.loc 1 119 0
 195 00c4 0133     		add	r3, r3, #1
 196              	.L81:
 197 00c6 2360     		str	r3, [r4]
 198              	.L4:
 120:../itwoc.c    **** 
 121:../itwoc.c    **** 	}
 122:../itwoc.c    **** 
 123:../itwoc.c    **** 	if (byteCount == 3)
 199              		.loc 1 123 0
 200 00c8 2668     		ldr	r6, [r4]
 201 00ca 032E     		cmp	r6, #3
 202 00cc 00D0     		beq	.LCB141
 203 00ce DFE1     		b	.L12	@long jump
 204              	.LCB141:
 124:../itwoc.c    **** 	{
 125:../itwoc.c    **** 		if(Command == INTENSITY_RED) // Red Command
 205              		.loc 1 125 0
 206 00d0 934A     		ldr	r2, .L92+8
 207 00d2 1078     		ldrb	r0, [r2]
 208 00d4 1128     		cmp	r0, #17
 209 00d6 19D1     		bne	.L13
 126:../itwoc.c    **** 		{
 127:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle0, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle0.ChNum)); // e
 210              		.loc 1 127 0
 211 00d8 984D     		ldr	r5, .L92+36
 212 00da 0127     		mov	r7, #1
 213 00dc AB68     		ldr	r3, [r5, #8]
 214 00de 281C     		mov	r0, r5
 215 00e0 9F40     		lsl	r7, r7, r3
 216 00e2 391C     		mov	r1, r7
 217 00e4 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 218              	.LVL7:
 128:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 219              		.loc 1 128 0
 220 00e8 934E     		ldr	r6, .L92+32
 221 00ea 3188     		ldrh	r1, [r6]
 222 00ec 0805     		lsl	r0, r1, #20
 223 00ee 010D     		lsr	r1, r0, #20
 129:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle0, DataTotal);
 224              		.loc 1 129 0
 225 00f0 281C     		mov	r0, r5
 128:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 226              		.loc 1 128 0
 227 00f2 3180     		strh	r1, [r6]
 228              		.loc 1 129 0
 229 00f4 FFF7FEFF 		bl	BCCUCH01_SetIntensity
 230              	.LVL8:
 130:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle0, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle0.ChNum));
 231              		.loc 1 130 0
 232 00f8 281C     		mov	r0, r5
 233 00fa 391C     		mov	r1, r7
 234 00fc FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 235              	.LVL9:
 131:../itwoc.c    **** 			byteCount = 0;
 236              		.loc 1 131 0
 237 0100 0022     		mov	r2, #0
 238 0102 2260     		str	r2, [r4]
 132:../itwoc.c    **** 
 133:../itwoc.c    **** 			flashBuffer[1] = DataTotal; // store into flash buffer
 239              		.loc 1 133 0
 240 0104 8A4D     		ldr	r5, .L92+24
 241 0106 3488     		ldrh	r4, [r6]
 242 0108 6C60     		str	r4, [r5, #4]
 243 010a 95E2     		b	.L1
 244              	.L13:
 134:../itwoc.c    **** 		}
 135:../itwoc.c    **** 
 136:../itwoc.c    **** 		else if (Command == INTENSITY_GREEN) // Green Command
 245              		.loc 1 136 0
 246 010c 1228     		cmp	r0, #18
 247 010e 19D1     		bne	.L15
 137:../itwoc.c    **** 		{
 138:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle1, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle1.ChNum));
 248              		.loc 1 138 0
 249 0110 8B4D     		ldr	r5, .L92+40
 250 0112 0127     		mov	r7, #1
 251 0114 AB68     		ldr	r3, [r5, #8]
 252 0116 281C     		mov	r0, r5
 253 0118 9F40     		lsl	r7, r7, r3
 254 011a 391C     		mov	r1, r7
 255 011c FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 256              	.LVL10:
 139:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 257              		.loc 1 139 0
 258 0120 854E     		ldr	r6, .L92+32
 259 0122 3188     		ldrh	r1, [r6]
 260 0124 0805     		lsl	r0, r1, #20
 261 0126 010D     		lsr	r1, r0, #20
 140:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle1, DataTotal);
 262              		.loc 1 140 0
 263 0128 281C     		mov	r0, r5
 139:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 264              		.loc 1 139 0
 265 012a 3180     		strh	r1, [r6]
 266              		.loc 1 140 0
 267 012c FFF7FEFF 		bl	BCCUCH01_SetIntensity
 268              	.LVL11:
 141:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle1, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle1.ChNum));
 269              		.loc 1 141 0
 270 0130 281C     		mov	r0, r5
 271 0132 391C     		mov	r1, r7
 272 0134 FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 273              	.LVL12:
 142:../itwoc.c    **** 			byteCount = 0;
 274              		.loc 1 142 0
 275 0138 0022     		mov	r2, #0
 276 013a 2260     		str	r2, [r4]
 143:../itwoc.c    **** 
 144:../itwoc.c    **** 			flashBuffer[2] = DataTotal;
 277              		.loc 1 144 0
 278 013c 7C4D     		ldr	r5, .L92+24
 279 013e 3488     		ldrh	r4, [r6]
 280 0140 AC60     		str	r4, [r5, #8]
 281 0142 79E2     		b	.L1
 282              	.L15:
 145:../itwoc.c    **** 		}
 146:../itwoc.c    **** 
 147:../itwoc.c    **** 
 148:../itwoc.c    **** 		else if (Command == INTENSITY_BLUE) // Blue Command
 283              		.loc 1 148 0
 284 0144 1328     		cmp	r0, #19
 285 0146 17D1     		bne	.L16
 149:../itwoc.c    **** 		{
 150:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle2, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle2.ChNum));
 286              		.loc 1 150 0
 287 0148 7E4D     		ldr	r5, .L92+44
 288 014a 0127     		mov	r7, #1
 289 014c AB68     		ldr	r3, [r5, #8]
 290 014e 281C     		mov	r0, r5
 291 0150 9F40     		lsl	r7, r7, r3
 292 0152 391C     		mov	r1, r7
 293 0154 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 294              	.LVL13:
 151:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 295              		.loc 1 151 0
 296 0158 774E     		ldr	r6, .L92+32
 297 015a 3188     		ldrh	r1, [r6]
 298 015c 0805     		lsl	r0, r1, #20
 299 015e 010D     		lsr	r1, r0, #20
 152:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle2, DataTotal);
 300              		.loc 1 152 0
 301 0160 281C     		mov	r0, r5
 151:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 302              		.loc 1 151 0
 303 0162 3180     		strh	r1, [r6]
 304              		.loc 1 152 0
 305 0164 FFF7FEFF 		bl	BCCUCH01_SetIntensity
 306              	.LVL14:
 153:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle2, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle2.ChNum));
 307              		.loc 1 153 0
 308 0168 281C     		mov	r0, r5
 309 016a 391C     		mov	r1, r7
 310 016c FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 311              	.LVL15:
 154:../itwoc.c    **** 			byteCount = 0;
 312              		.loc 1 154 0
 313 0170 0022     		mov	r2, #0
 314 0172 2260     		str	r2, [r4]
 155:../itwoc.c    **** 
 156:../itwoc.c    **** 			flashBuffer[3] = DataTotal;
 315              		.loc 1 156 0
 316 0174 3288     		ldrh	r2, [r6]
 317 0176 D1E1     		b	.L83
 318              	.L16:
 157:../itwoc.c    **** 		}
 158:../itwoc.c    **** 
 159:../itwoc.c    **** 		else if (Command == INTENSITY_RGB) // RGB Command
 319              		.loc 1 159 0
 320 0178 1428     		cmp	r0, #20
 321 017a 1CD1     		bne	.L17
 160:../itwoc.c    **** 		{
 161:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle0, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle0.ChNum));
 322              		.loc 1 161 0
 323 017c 6F48     		ldr	r0, .L92+36
 324 017e 0126     		mov	r6, #1
 325 0180 8268     		ldr	r2, [r0, #8]
 326 0182 311C     		mov	r1, r6
 327 0184 9140     		lsl	r1, r1, r2
 328 0186 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 329              	.LVL16:
 162:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle1, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle1.ChNum));
 330              		.loc 1 162 0
 331 018a 6D48     		ldr	r0, .L92+40
 332 018c 311C     		mov	r1, r6
 333 018e 8768     		ldr	r7, [r0, #8]
 334 0190 B940     		lsl	r1, r1, r7
 335 0192 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 336              	.LVL17:
 163:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle2, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle2.ChNum));
 337              		.loc 1 163 0
 338 0196 6B48     		ldr	r0, .L92+44
 339 0198 311C     		mov	r1, r6
 340 019a 8368     		ldr	r3, [r0, #8]
 341 019c 9940     		lsl	r1, r1, r3
 342 019e FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 343              	.LVL18:
 164:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 344              		.loc 1 164 0
 345 01a2 6549     		ldr	r1, .L92+32
 165:../itwoc.c    **** 			Lamphandle.Intensity_Red = DataTotal;
 346              		.loc 1 165 0
 347 01a4 684A     		ldr	r2, .L92+48
 164:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 348              		.loc 1 164 0
 349 01a6 0888     		ldrh	r0, [r1]
 166:../itwoc.c    **** 
 167:../itwoc.c    **** 			flashBuffer[1] = DataTotal;
 350              		.loc 1 167 0
 351 01a8 614F     		ldr	r7, .L92+24
 164:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 352              		.loc 1 164 0
 353 01aa 0405     		lsl	r4, r0, #20
 354 01ac 260D     		lsr	r6, r4, #20
 355 01ae 0E80     		strh	r6, [r1]
 165:../itwoc.c    **** 			Lamphandle.Intensity_Red = DataTotal;
 356              		.loc 1 165 0
 357 01b0 1660     		str	r6, [r2]
 358              		.loc 1 167 0
 359 01b2 7E60     		str	r6, [r7, #4]
 360 01b4 40E2     		b	.L1
 361              	.L17:
 168:../itwoc.c    **** 		}
 169:../itwoc.c    **** 
 170:../itwoc.c    **** 		else if (Command == CURRENT_RED) // Red Current Command
 362              		.loc 1 170 0
 363 01b6 2128     		cmp	r0, #33
 364 01b8 1AD1     		bne	.L18
 171:../itwoc.c    **** 		{
 172:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle3, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle3.ChNum));
 365              		.loc 1 172 0
 366 01ba 644E     		ldr	r6, .L92+52
 367 01bc 0127     		mov	r7, #1
 368 01be B268     		ldr	r2, [r6, #8]
 369 01c0 301C     		mov	r0, r6
 370 01c2 9740     		lsl	r7, r7, r2
 371 01c4 391C     		mov	r1, r7
 372 01c6 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 373              	.LVL19:
 173:../itwoc.c    **** 			if (DataTotal > 0x74) // To ensure current does not exceed limit
 374              		.loc 1 173 0
 375 01ca 5B4D     		ldr	r5, .L92+32
 376 01cc 2B88     		ldrh	r3, [r5]
 377 01ce 742B     		cmp	r3, #116
 378 01d0 01D9     		bls	.L19
 174:../itwoc.c    **** 				DataTotal = 0x74;
 379              		.loc 1 174 0
 380 01d2 7421     		mov	r1, #116
 381 01d4 2980     		strh	r1, [r5]
 382              	.L19:
 175:../itwoc.c    **** 			DataTotal &= 0x00FF;
 383              		.loc 1 175 0
 384 01d6 2978     		ldrb	r1, [r5]
 176:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle3, DataTotal);
 385              		.loc 1 176 0
 386 01d8 301C     		mov	r0, r6
 175:../itwoc.c    **** 			DataTotal &= 0x00FF;
 387              		.loc 1 175 0
 388 01da 2980     		strh	r1, [r5]
 389              		.loc 1 176 0
 390 01dc FFF7FEFF 		bl	BCCUCH01_SetIntensity
 391              	.LVL20:
 177:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle3, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle3.ChNum));
 392              		.loc 1 177 0
 393 01e0 301C     		mov	r0, r6
 394 01e2 391C     		mov	r1, r7
 395 01e4 FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 396              	.LVL21:
 178:../itwoc.c    **** 			byteCount = 0;
 397              		.loc 1 178 0
 398 01e8 0020     		mov	r0, #0
 399 01ea 2060     		str	r0, [r4]
 179:../itwoc.c    **** 
 180:../itwoc.c    **** 			flashBuffer[4] = DataTotal;
 400              		.loc 1 180 0
 401 01ec 2888     		ldrh	r0, [r5]
 402 01ee 5BE0     		b	.L84
 403              	.L18:
 181:../itwoc.c    **** 
 182:../itwoc.c    **** 		}
 183:../itwoc.c    **** 
 184:../itwoc.c    **** 		else if (Command == CURRENT_GREEN) // Green Current Command
 404              		.loc 1 184 0
 405 01f0 2228     		cmp	r0, #34
 406 01f2 1AD1     		bne	.L20
 185:../itwoc.c    **** 		{
 186:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle4, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle4.ChNum));
 407              		.loc 1 186 0
 408 01f4 564E     		ldr	r6, .L92+56
 409 01f6 0127     		mov	r7, #1
 410 01f8 B268     		ldr	r2, [r6, #8]
 411 01fa 301C     		mov	r0, r6
 412 01fc 9740     		lsl	r7, r7, r2
 413 01fe 391C     		mov	r1, r7
 414 0200 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 415              	.LVL22:
 187:../itwoc.c    **** 			if (DataTotal > 0x74)
 416              		.loc 1 187 0
 417 0204 4C4D     		ldr	r5, .L92+32
 418 0206 2B88     		ldrh	r3, [r5]
 419 0208 742B     		cmp	r3, #116
 420 020a 01D9     		bls	.L21
 188:../itwoc.c    **** 				DataTotal = 0x74;
 421              		.loc 1 188 0
 422 020c 7421     		mov	r1, #116
 423 020e 2980     		strh	r1, [r5]
 424              	.L21:
 189:../itwoc.c    **** 			DataTotal &= 0x00FF;
 425              		.loc 1 189 0
 426 0210 2978     		ldrb	r1, [r5]
 190:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle4, DataTotal);
 427              		.loc 1 190 0
 428 0212 301C     		mov	r0, r6
 189:../itwoc.c    **** 			DataTotal &= 0x00FF;
 429              		.loc 1 189 0
 430 0214 2980     		strh	r1, [r5]
 431              		.loc 1 190 0
 432 0216 FFF7FEFF 		bl	BCCUCH01_SetIntensity
 433              	.LVL23:
 191:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle4, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle4.ChNum));
 434              		.loc 1 191 0
 435 021a 301C     		mov	r0, r6
 436 021c 391C     		mov	r1, r7
 437 021e FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 438              	.LVL24:
 192:../itwoc.c    **** 			byteCount = 0;
 439              		.loc 1 192 0
 440 0222 0020     		mov	r0, #0
 441 0224 2060     		str	r0, [r4]
 193:../itwoc.c    **** 
 194:../itwoc.c    **** 			flashBuffer[5] = DataTotal;
 442              		.loc 1 194 0
 443 0226 2A88     		ldrh	r2, [r5]
 444 0228 4BE1     		b	.L85
 445              	.L20:
 195:../itwoc.c    **** 		}
 196:../itwoc.c    **** 
 197:../itwoc.c    **** 
 198:../itwoc.c    **** 		else if (Command == CURRENT_BLUE) // Blue Current Command
 446              		.loc 1 198 0
 447 022a 2328     		cmp	r0, #35
 448 022c 1AD1     		bne	.L22
 199:../itwoc.c    **** 		{
 200:../itwoc.c    **** 
 201:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle5, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle5.ChNum));
 449              		.loc 1 201 0
 450 022e 494E     		ldr	r6, .L92+60
 451 0230 0127     		mov	r7, #1
 452 0232 B268     		ldr	r2, [r6, #8]
 453 0234 301C     		mov	r0, r6
 454 0236 9740     		lsl	r7, r7, r2
 455 0238 391C     		mov	r1, r7
 456 023a FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 457              	.LVL25:
 202:../itwoc.c    **** 			if (DataTotal > 0x74)
 458              		.loc 1 202 0
 459 023e 3E4D     		ldr	r5, .L92+32
 460 0240 2B88     		ldrh	r3, [r5]
 461 0242 742B     		cmp	r3, #116
 462 0244 01D9     		bls	.L23
 203:../itwoc.c    **** 				DataTotal = 0x74;
 463              		.loc 1 203 0
 464 0246 7421     		mov	r1, #116
 465 0248 2980     		strh	r1, [r5]
 466              	.L23:
 204:../itwoc.c    **** 			DataTotal &= 0x00FF;
 467              		.loc 1 204 0
 468 024a 2978     		ldrb	r1, [r5]
 205:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle5, DataTotal);
 469              		.loc 1 205 0
 470 024c 301C     		mov	r0, r6
 204:../itwoc.c    **** 			DataTotal &= 0x00FF;
 471              		.loc 1 204 0
 472 024e 2980     		strh	r1, [r5]
 473              		.loc 1 205 0
 474 0250 FFF7FEFF 		bl	BCCUCH01_SetIntensity
 475              	.LVL26:
 206:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle5, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle5.ChNum));
 476              		.loc 1 206 0
 477 0254 301C     		mov	r0, r6
 478 0256 391C     		mov	r1, r7
 479 0258 FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 480              	.LVL27:
 207:../itwoc.c    **** 			byteCount = 0;
 481              		.loc 1 207 0
 482 025c 0020     		mov	r0, #0
 483 025e 2060     		str	r0, [r4]
 208:../itwoc.c    **** 
 209:../itwoc.c    **** 			flashBuffer[6] = DataTotal;
 484              		.loc 1 209 0
 485 0260 2988     		ldrh	r1, [r5]
 486 0262 7BE1     		b	.L86
 487              	.L22:
 210:../itwoc.c    **** 		}
 211:../itwoc.c    **** 
 212:../itwoc.c    **** 
 213:../itwoc.c    **** 		else if (Command == CURRENT_RGB) // RGB Current Command
 488              		.loc 1 213 0
 489 0264 2428     		cmp	r0, #36
 490 0266 22D1     		bne	.L24
 214:../itwoc.c    **** 		{
 215:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle3, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle3.ChNum));
 491              		.loc 1 215 0
 492 0268 384E     		ldr	r6, .L92+52
 493 026a 0127     		mov	r7, #1
 494 026c B268     		ldr	r2, [r6, #8]
 495 026e 391C     		mov	r1, r7
 496 0270 9140     		lsl	r1, r1, r2
 497 0272 301C     		mov	r0, r6
 498 0274 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 499              	.LVL28:
 216:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle4, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle4.ChNum));
 500              		.loc 1 216 0
 501 0278 3548     		ldr	r0, .L92+56
 502 027a 391C     		mov	r1, r7
 503 027c 8368     		ldr	r3, [r0, #8]
 504 027e 9940     		lsl	r1, r1, r3
 505 0280 FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 506              	.LVL29:
 217:../itwoc.c    **** 			BCCUCH01_AbortLinearWalk(&BCCUCH01_Handle5, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle5.ChNum));
 507              		.loc 1 217 0
 508 0284 3348     		ldr	r0, .L92+60
 509 0286 391C     		mov	r1, r7
 510 0288 8468     		ldr	r4, [r0, #8]
 511 028a A140     		lsl	r1, r1, r4
 512 028c FFF7FEFF 		bl	BCCUCH01_AbortLinearWalk
 513              	.LVL30:
 218:../itwoc.c    **** 			if (DataTotal > 0x64)
 514              		.loc 1 218 0
 515 0290 294F     		ldr	r7, .L92+32
 516 0292 301C     		mov	r0, r6
 517 0294 3988     		ldrh	r1, [r7]
 518 0296 6429     		cmp	r1, #100
 519 0298 01D9     		bls	.L25
 219:../itwoc.c    **** 				DataTotal = 0x64;
 520              		.loc 1 219 0
 521 029a 6426     		mov	r6, #100
 522 029c 3E80     		strh	r6, [r7]
 523              	.L25:
 220:../itwoc.c    **** 			DataTotal &= 0x00FF;
 524              		.loc 1 220 0
 525 029e 3978     		ldrb	r1, [r7]
 526 02a0 3980     		strh	r1, [r7]
 221:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle3, DataTotal);
 527              		.loc 1 221 0
 528 02a2 FFF7FEFF 		bl	BCCUCH01_SetIntensity
 529              	.LVL31:
 222:../itwoc.c    **** 			flashBuffer[4] = DataTotal;
 530              		.loc 1 222 0
 531 02a6 3888     		ldrh	r0, [r7]
 532              	.L84:
 533 02a8 214C     		ldr	r4, .L92+24
 534 02aa 2061     		str	r0, [r4, #16]
 535 02ac C4E1     		b	.L1
 536              	.L24:
 223:../itwoc.c    **** 		}
 224:../itwoc.c    **** 
 225:../itwoc.c    **** 		else if (Command == CHANGEADDRESS) // Change Address of Slave
 537              		.loc 1 225 0
 538 02ae 7028     		cmp	r0, #112
 539 02b0 13D1     		bne	.L26
 226:../itwoc.c    **** 		{
 227:../itwoc.c    **** 			I2C003_Handle0.I2CRegs->PCR_IICMode &= 0xFFFF0000; // Clear the address register
 540              		.loc 1 227 0
 541 02b2 EB6B     		ldr	r3, [r5, #60]
 228:../itwoc.c    **** 			changeAddress = (DataUpper << 8) | DataLower; // Put Address into one variable
 542              		.loc 1 228 0
 543 02b4 1B4F     		ldr	r7, .L92+12
 227:../itwoc.c    **** 			I2C003_Handle0.I2CRegs->PCR_IICMode &= 0xFFFF0000; // Clear the address register
 544              		.loc 1 227 0
 545 02b6 180C     		lsr	r0, r3, #16
 546              		.loc 1 228 0
 547 02b8 1B4B     		ldr	r3, .L92+16
 227:../itwoc.c    **** 			I2C003_Handle0.I2CRegs->PCR_IICMode &= 0xFFFF0000; // Clear the address register
 548              		.loc 1 227 0
 549 02ba 0104     		lsl	r1, r0, #16
 550              		.loc 1 228 0
 551 02bc 3A78     		ldrb	r2, [r7]
 227:../itwoc.c    **** 			I2C003_Handle0.I2CRegs->PCR_IICMode &= 0xFFFF0000; // Clear the address register
 552              		.loc 1 227 0
 553 02be E963     		str	r1, [r5, #60]
 554              		.loc 1 228 0
 555 02c0 1878     		ldrb	r0, [r3]
 229:../itwoc.c    **** 			changeAddress &= 0x0000FFFF;
 230:../itwoc.c    **** 			I2C003_Handle0.I2CRegs->PCR_IICMode |= changeAddress; // write into register
 556              		.loc 1 230 0
 557 02c2 EF6B     		ldr	r7, [r5, #60]
 228:../itwoc.c    **** 			changeAddress = (DataUpper << 8) | DataLower; // Put Address into one variable
 558              		.loc 1 228 0
 559 02c4 1602     		lsl	r6, r2, #8
 229:../itwoc.c    **** 			changeAddress &= 0x0000FFFF;
 560              		.loc 1 229 0
 561 02c6 0643     		orr	r6, r0
 562              	.LVL32:
 563              		.loc 1 230 0
 564 02c8 3743     		orr	r7, r6
 565              	.LVL33:
 566 02ca EF63     		str	r7, [r5, #60]
 231:../itwoc.c    **** 			byteCount = 0;
 567              		.loc 1 231 0
 568 02cc 0025     		mov	r5, #0
 229:../itwoc.c    **** 			changeAddress &= 0x0000FFFF;
 569              		.loc 1 229 0
 570 02ce 2249     		ldr	r1, .L92+64
 571              		.loc 1 231 0
 572 02d0 2560     		str	r5, [r4]
 232:../itwoc.c    **** 
 233:../itwoc.c    **** 			flashBuffer[22] = changeAddress;
 573              		.loc 1 233 0
 574 02d2 174C     		ldr	r4, .L92+24
 229:../itwoc.c    **** 			changeAddress &= 0x0000FFFF;
 575              		.loc 1 229 0
 576 02d4 0E60     		str	r6, [r1]
 577              		.loc 1 233 0
 578 02d6 A665     		str	r6, [r4, #88]
 579 02d8 AEE1     		b	.L1
 580              	.LVL34:
 581              	.L26:
 234:../itwoc.c    **** 		}
 235:../itwoc.c    **** 
 236:../itwoc.c    **** 		else if (Command == OFFTIME_RED) // Offtime of Red channel
 582              		.loc 1 236 0
 583 02da 4128     		cmp	r0, #65
 584 02dc 0CD1     		bne	.L27
 237:../itwoc.c    **** 		{
 238:../itwoc.c    **** 			//			if (DataTotal < 0x10)
 239:../itwoc.c    **** 			//				DataTotal = 0x11;
 240:../itwoc.c    **** 			DataTotal &= 0x00FF;
 585              		.loc 1 240 0
 586 02de 164F     		ldr	r7, .L92+32
 241:../itwoc.c    **** 			PWMSP003_UpdateCompare(&PWMSP003_Handle0, DataTotal, FALSE);
 587              		.loc 1 241 0
 588 02e0 0022     		mov	r2, #0
 240:../itwoc.c    **** 			DataTotal &= 0x00FF;
 589              		.loc 1 240 0
 590 02e2 3978     		ldrb	r1, [r7]
 591              		.loc 1 241 0
 592 02e4 1D48     		ldr	r0, .L92+68
 240:../itwoc.c    **** 			DataTotal &= 0x00FF;
 593              		.loc 1 240 0
 594 02e6 3980     		strh	r1, [r7]
 595              		.loc 1 241 0
 596 02e8 FFF7FEFF 		bl	PWMSP003_UpdateCompare
 597              	.LVL35:
 242:../itwoc.c    **** 			byteCount = 0;
 598              		.loc 1 242 0
 599 02ec 0022     		mov	r2, #0
 600 02ee 2260     		str	r2, [r4]
 243:../itwoc.c    **** 
 244:../itwoc.c    **** 			flashBuffer[16] = DataTotal;
 601              		.loc 1 244 0
 602 02f0 0F4E     		ldr	r6, .L92+24
 603 02f2 3C88     		ldrh	r4, [r7]
 604 02f4 3464     		str	r4, [r6, #64]
 605 02f6 9FE1     		b	.L1
 606              	.L27:
 245:../itwoc.c    **** 		}
 246:../itwoc.c    **** 
 247:../itwoc.c    **** 		else if (Command == OFFTIME_GREEN) // Offtime of Green channel
 607              		.loc 1 247 0
 608 02f8 4228     		cmp	r0, #66
 609 02fa 33D1     		bne	.L28
 248:../itwoc.c    **** 		{
 249:../itwoc.c    **** 			//			if (DataTotal < 0x10)
 250:../itwoc.c    **** 			//				DataTotal = 0x11;
 251:../itwoc.c    **** 
 252:../itwoc.c    **** 			DataTotal &= 0x00FF;
 610              		.loc 1 252 0
 611 02fc 0E4D     		ldr	r5, .L92+32
 253:../itwoc.c    **** 			PWMSP003_UpdateCompare(&PWMSP003_Handle1, DataTotal, FALSE);
 612              		.loc 1 253 0
 613 02fe 1848     		ldr	r0, .L92+72
 252:../itwoc.c    **** 			DataTotal &= 0x00FF;
 614              		.loc 1 252 0
 615 0300 2978     		ldrb	r1, [r5]
 616              		.loc 1 253 0
 617 0302 0022     		mov	r2, #0
 252:../itwoc.c    **** 			DataTotal &= 0x00FF;
 618              		.loc 1 252 0
 619 0304 2980     		strh	r1, [r5]
 620              		.loc 1 253 0
 621 0306 FFF7FEFF 		bl	PWMSP003_UpdateCompare
 622              	.LVL36:
 254:../itwoc.c    **** 			byteCount = 0;
 255:../itwoc.c    **** 
 256:../itwoc.c    **** 			flashBuffer[17] = DataTotal;
 623              		.loc 1 256 0
 624 030a 2888     		ldrh	r0, [r5]
 625 030c 0849     		ldr	r1, .L92+24
 254:../itwoc.c    **** 			byteCount = 0;
 626              		.loc 1 254 0
 627 030e 0023     		mov	r3, #0
 628 0310 2360     		str	r3, [r4]
 629              		.loc 1 256 0
 630 0312 4864     		str	r0, [r1, #68]
 631 0314 90E1     		b	.L1
 632              	.L93:
 633 0316 C046     		.align	2
 634              	.L92:
 635 0318 00000000 		.word	I2C003_Handle0
 636 031c 00000000 		.word	byteCount
 637 0320 00000000 		.word	Command
 638 0324 00000000 		.word	DataUpper
 639 0328 00000000 		.word	DataLower
 640 032c 00000000 		.word	DMXControl
 641 0330 00000000 		.word	flashBuffer
 642 0334 00000000 		.word	writeToFlash
 643 0338 00000000 		.word	DataTotal
 644 033c 00000000 		.word	BCCUCH01_Handle0
 645 0340 00000000 		.word	BCCUCH01_Handle1
 646 0344 00000000 		.word	BCCUCH01_Handle2
 647 0348 00000000 		.word	Lamphandle
 648 034c 00000000 		.word	BCCUCH01_Handle3
 649 0350 00000000 		.word	BCCUCH01_Handle4
 650 0354 00000000 		.word	BCCUCH01_Handle5
 651 0358 00000000 		.word	changeAddress
 652 035c 00000000 		.word	PWMSP003_Handle0
 653 0360 00000000 		.word	PWMSP003_Handle1
 654              	.L28:
 257:../itwoc.c    **** 		}
 258:../itwoc.c    **** 
 259:../itwoc.c    **** 		else if (Command == OFFTIME_BLUE) // Offtime of Blue channel
 655              		.loc 1 259 0
 656 0364 4328     		cmp	r0, #67
 657 0366 0CD1     		bne	.L29
 260:../itwoc.c    **** 		{
 261:../itwoc.c    **** 			//			if (DataTotal < 0x10)
 262:../itwoc.c    **** 			//				DataTotal = 0x11;
 263:../itwoc.c    **** 			DataTotal &= 0x00FF;
 658              		.loc 1 263 0
 659 0368 B44D     		ldr	r5, .L94
 264:../itwoc.c    **** 			PWMSP003_UpdateCompare(&PWMSP003_Handle2, DataTotal, FALSE);
 660              		.loc 1 264 0
 661 036a B548     		ldr	r0, .L94+4
 263:../itwoc.c    **** 			DataTotal &= 0x00FF;
 662              		.loc 1 263 0
 663 036c 2978     		ldrb	r1, [r5]
 664              		.loc 1 264 0
 665 036e 0022     		mov	r2, #0
 265:../itwoc.c    **** 			byteCount = 0;
 666              		.loc 1 265 0
 667 0370 0027     		mov	r7, #0
 263:../itwoc.c    **** 			DataTotal &= 0x00FF;
 668              		.loc 1 263 0
 669 0372 2980     		strh	r1, [r5]
 264:../itwoc.c    **** 			PWMSP003_UpdateCompare(&PWMSP003_Handle2, DataTotal, FALSE);
 670              		.loc 1 264 0
 671 0374 FFF7FEFF 		bl	PWMSP003_UpdateCompare
 672              	.LVL37:
 673              		.loc 1 265 0
 674 0378 2760     		str	r7, [r4]
 266:../itwoc.c    **** 
 267:../itwoc.c    **** 			flashBuffer[18] = DataTotal;
 675              		.loc 1 267 0
 676 037a B24E     		ldr	r6, .L94+8
 677 037c 2C88     		ldrh	r4, [r5]
 678 037e B464     		str	r4, [r6, #72]
 679 0380 5AE1     		b	.L1
 680              	.L29:
 268:../itwoc.c    **** 
 269:../itwoc.c    **** 		}
 270:../itwoc.c    **** 
 271:../itwoc.c    **** 		else if (Command == WALKTIME) // Change Walk Time
 681              		.loc 1 271 0
 682 0382 5028     		cmp	r0, #80
 683 0384 17D1     		bne	.L30
 272:../itwoc.c    **** 		{
 273:../itwoc.c    **** 			DataTotal &= 0x03FF; // Mask data. Walktime is 10 bit, not 12 bit information
 684              		.loc 1 273 0
 685 0386 AD4D     		ldr	r5, .L94
 274:../itwoc.c    **** //			if (DataTotal < 10 || DataTotal == 0x0)
 275:../itwoc.c    **** //				DataTotal = 10;
 276:../itwoc.c    **** 			BCCUCH01_SetLinearWalkPrescaler(&BCCUCH01_Handle0, DataTotal); // Red channel
 686              		.loc 1 276 0
 687 0388 AF48     		ldr	r0, .L94+12
 273:../itwoc.c    **** 			DataTotal &= 0x03FF; // Mask data. Walktime is 10 bit, not 12 bit information
 688              		.loc 1 273 0
 689 038a 2F88     		ldrh	r7, [r5]
 690 038c BE05     		lsl	r6, r7, #22
 691 038e B10D     		lsr	r1, r6, #22
 692 0390 2980     		strh	r1, [r5]
 693              		.loc 1 276 0
 694 0392 FFF7FEFF 		bl	BCCUCH01_SetLinearWalkPrescaler
 695              	.LVL38:
 277:../itwoc.c    **** 			BCCUCH01_SetLinearWalkPrescaler(&BCCUCH01_Handle1, DataTotal); // Green channel
 696              		.loc 1 277 0
 697 0396 2988     		ldrh	r1, [r5]
 698 0398 AC48     		ldr	r0, .L94+16
 699 039a FFF7FEFF 		bl	BCCUCH01_SetLinearWalkPrescaler
 700              	.LVL39:
 278:../itwoc.c    **** 			BCCUCH01_SetLinearWalkPrescaler(&BCCUCH01_Handle2, DataTotal); // Blue channel
 701              		.loc 1 278 0
 702 039e 2988     		ldrh	r1, [r5]
 703 03a0 AB48     		ldr	r0, .L94+20
 704 03a2 FFF7FEFF 		bl	BCCUCH01_SetLinearWalkPrescaler
 705              	.LVL40:
 279:../itwoc.c    **** 			Lamphandle.LinearWalkPrescaler = DataTotal;
 706              		.loc 1 279 0
 707 03a6 2B88     		ldrh	r3, [r5]
 708 03a8 AA48     		ldr	r0, .L94+24
 280:../itwoc.c    **** 			byteCount = 0;
 281:../itwoc.c    **** 
 282:../itwoc.c    **** 			flashBuffer[19] = DataTotal;
 709              		.loc 1 282 0
 710 03aa A64A     		ldr	r2, .L94+8
 280:../itwoc.c    **** 			byteCount = 0;
 711              		.loc 1 280 0
 712 03ac 0021     		mov	r1, #0
 279:../itwoc.c    **** 			Lamphandle.LinearWalkPrescaler = DataTotal;
 713              		.loc 1 279 0
 714 03ae 8361     		str	r3, [r0, #24]
 280:../itwoc.c    **** 			byteCount = 0;
 715              		.loc 1 280 0
 716 03b0 2160     		str	r1, [r4]
 717              		.loc 1 282 0
 718 03b2 D364     		str	r3, [r2, #76]
 719 03b4 40E1     		b	.L1
 720              	.L30:
 283:../itwoc.c    **** 		}
 284:../itwoc.c    **** 
 285:../itwoc.c    **** 		else if (Command == DIMMINGLEVEL) // Change dimming Level
 721              		.loc 1 285 0
 722 03b6 6028     		cmp	r0, #96
 723 03b8 1DD1     		bne	.L31
 286:../itwoc.c    **** 		{
 287:../itwoc.c    **** 			BCCUDIM01_AbortDimming(&BCCUDIM01_Handle0, GET_CHANNEL_DIM_MASK(BCCUDIM01_Handle0.DE_Num)); // A
 724              		.loc 1 287 0
 725 03ba A74D     		ldr	r5, .L94+28
 726 03bc 2F7A     		ldrb	r7, [r5, #8]
 727 03be 381C     		mov	r0, r7
 728 03c0 FFF7FEFF 		bl	GET_CHANNEL_DIM_MASK
 729              	.LVL41:
 730 03c4 011C     		mov	r1, r0
 731 03c6 281C     		mov	r0, r5
 732 03c8 FFF7FEFF 		bl	BCCUDIM01_AbortDimming
 733              	.LVL42:
 288:../itwoc.c    **** 			DataTotal &= 0x0FFF; // Mask data. Dimming is only 12 bit information, not 16 bits
 734              		.loc 1 288 0
 735 03cc 9B4E     		ldr	r6, .L94
 736 03ce 3388     		ldrh	r3, [r6]
 737 03d0 1805     		lsl	r0, r3, #20
 738 03d2 010D     		lsr	r1, r0, #20
 289:../itwoc.c    **** 			BCCUDIM01_SetDimLvl(&BCCUDIM01_Handle0, DataTotal);
 739              		.loc 1 289 0
 740 03d4 281C     		mov	r0, r5
 288:../itwoc.c    **** 			DataTotal &= 0x0FFF; // Mask data. Dimming is only 12 bit information, not 16 bits
 741              		.loc 1 288 0
 742 03d6 3180     		strh	r1, [r6]
 743              		.loc 1 289 0
 744 03d8 FFF7FEFF 		bl	BCCUDIM01_SetDimLvl
 745              	.LVL43:
 290:../itwoc.c    **** 			BCCUDIM01_StartDimming(&BCCUDIM01_Handle0, GET_CHANNEL_DIM_MASK(BCCUDIM01_Handle0.DE_Num));
 746              		.loc 1 290 0
 747 03dc 381C     		mov	r0, r7
 748 03de FFF7FEFF 		bl	GET_CHANNEL_DIM_MASK
 749              	.LVL44:
 750 03e2 011C     		mov	r1, r0
 751 03e4 281C     		mov	r0, r5
 752 03e6 FFF7FEFF 		bl	BCCUDIM01_StartDimming
 753              	.LVL45:
 291:../itwoc.c    **** 			byteCount = 0;
 754              		.loc 1 291 0
 755 03ea 0021     		mov	r1, #0
 756 03ec 2160     		str	r1, [r4]
 292:../itwoc.c    **** 
 293:../itwoc.c    **** 			flashBuffer[20] = DataTotal;
 757              		.loc 1 293 0
 758 03ee 3288     		ldrh	r2, [r6]
 759 03f0 944C     		ldr	r4, .L94+8
 760 03f2 2265     		str	r2, [r4, #80]
 761 03f4 20E1     		b	.L1
 762              	.L31:
 294:../itwoc.c    **** 		}
 295:../itwoc.c    **** 
 296:../itwoc.c    **** 		else if (Command == FADERATE) // Fade Rate
 763              		.loc 1 296 0
 764 03f6 6128     		cmp	r0, #97
 765 03f8 15D1     		bne	.L32
 297:../itwoc.c    **** 		{
 298:../itwoc.c    **** 			BCCUDIM01_AbortDimming(&BCCUDIM01_Handle0, GET_CHANNEL_DIM_MASK(BCCUDIM01_Handle0.DE_Num));
 766              		.loc 1 298 0
 767 03fa 974F     		ldr	r7, .L94+28
 299:../itwoc.c    **** 			DataTotal &= 0x03FF; // 10bit number
 300:../itwoc.c    **** 			BCCUDIM01_SetDimDiv(&BCCUDIM01_Handle0, DataTotal);
 301:../itwoc.c    **** 			byteCount = 0;
 768              		.loc 1 301 0
 769 03fc 0026     		mov	r6, #0
 298:../itwoc.c    **** 			BCCUDIM01_AbortDimming(&BCCUDIM01_Handle0, GET_CHANNEL_DIM_MASK(BCCUDIM01_Handle0.DE_Num));
 770              		.loc 1 298 0
 771 03fe 387A     		ldrb	r0, [r7, #8]
 772 0400 FFF7FEFF 		bl	GET_CHANNEL_DIM_MASK
 773              	.LVL46:
 774 0404 011C     		mov	r1, r0
 775 0406 381C     		mov	r0, r7
 776 0408 FFF7FEFF 		bl	BCCUDIM01_AbortDimming
 777              	.LVL47:
 299:../itwoc.c    **** 			DataTotal &= 0x03FF; // 10bit number
 778              		.loc 1 299 0
 779 040c 8B4D     		ldr	r5, .L94
 780 040e 2888     		ldrh	r0, [r5]
 781 0410 8105     		lsl	r1, r0, #22
 782 0412 890D     		lsr	r1, r1, #22
 300:../itwoc.c    **** 			BCCUDIM01_SetDimDiv(&BCCUDIM01_Handle0, DataTotal);
 783              		.loc 1 300 0
 784 0414 381C     		mov	r0, r7
 299:../itwoc.c    **** 			DataTotal &= 0x03FF; // 10bit number
 785              		.loc 1 299 0
 786 0416 2980     		strh	r1, [r5]
 300:../itwoc.c    **** 			BCCUDIM01_SetDimDiv(&BCCUDIM01_Handle0, DataTotal);
 787              		.loc 1 300 0
 788 0418 FFF7FEFF 		bl	BCCUDIM01_SetDimDiv
 789              	.LVL48:
 790              		.loc 1 301 0
 791 041c 2660     		str	r6, [r4]
 302:../itwoc.c    **** 
 303:../itwoc.c    **** 			flashBuffer[21] = DataTotal;
 792              		.loc 1 303 0
 793 041e 2A88     		ldrh	r2, [r5]
 794 0420 884C     		ldr	r4, .L94+8
 795 0422 6265     		str	r2, [r4, #84]
 796 0424 08E1     		b	.L1
 797              	.L32:
 304:../itwoc.c    **** 		}
 305:../itwoc.c    **** 
 306:../itwoc.c    **** 		else if (Command == DIRECTACCESS_READ || Command == DIRECTACCESS_MOVE || Command == DIRECTACCESS_
 798              		.loc 1 306 0
 799 0426 051C     		mov	r5, r0
 800 0428 7035     		add	r5, r5, #112
 801 042a E9B2     		uxtb	r1, r5
 802 042c 0329     		cmp	r1, #3
 803 042e 03D8     		bhi	.L33
 307:../itwoc.c    **** 		{
 308:../itwoc.c    **** 			// Direct Access commands. The first 4 bytes being sent are the register address. Lower 16 bits 
 309:../itwoc.c    **** 			registerAddress = 0;
 310:../itwoc.c    **** 			registerAddress = DataTotal;
 804              		.loc 1 310 0
 805 0430 824B     		ldr	r3, .L94
 806 0432 8A4D     		ldr	r5, .L94+32
 807 0434 1A88     		ldrh	r2, [r3]
 808 0436 52E0     		b	.L87
 809              	.L33:
 311:../itwoc.c    **** 		}
 312:../itwoc.c    **** 
 313:../itwoc.c    **** 		else if (Command == DMXSLOT) // Starting slot number of DMX
 810              		.loc 1 313 0
 811 0438 3228     		cmp	r0, #50
 812 043a 08D1     		bne	.L34
 314:../itwoc.c    **** 		{
 315:../itwoc.c    **** 			startingSlot = DataTotal;
 813              		.loc 1 315 0
 814 043c 7F49     		ldr	r1, .L94
 316:../itwoc.c    **** 			byteCount = 0;
 815              		.loc 1 316 0
 816 043e 0022     		mov	r2, #0
 315:../itwoc.c    **** 			startingSlot = DataTotal;
 817              		.loc 1 315 0
 818 0440 0F88     		ldrh	r7, [r1]
 819 0442 874E     		ldr	r6, .L94+36
 820              		.loc 1 316 0
 821 0444 2260     		str	r2, [r4]
 317:../itwoc.c    **** 
 318:../itwoc.c    **** 			flashBuffer[8] = DataTotal;
 822              		.loc 1 318 0
 823 0446 7F4C     		ldr	r4, .L94+8
 315:../itwoc.c    **** 			startingSlot = DataTotal;
 824              		.loc 1 315 0
 825 0448 3780     		strh	r7, [r6]
 826              		.loc 1 318 0
 827 044a 2762     		str	r7, [r4, #32]
 828 044c F4E0     		b	.L1
 829              	.L34:
 319:../itwoc.c    **** 		}
 320:../itwoc.c    **** 
 321:../itwoc.c    **** 		else if (Command == DMX8BIT) // Configuration for 8 bit DMX
 830              		.loc 1 321 0
 831 044e 3328     		cmp	r0, #51
 832 0450 0CD1     		bne	.L35
 322:../itwoc.c    **** 		{
 323:../itwoc.c    **** 			DMX_8 = 1; // Set status of 8 bit DMX
 324:../itwoc.c    **** 			DMX_16 = 0; // Clear 16 bit
 325:../itwoc.c    **** 
 326:../itwoc.c    **** 			dmx_RedH = DataTotal; // First 16 bits contains information for Red Slot
 833              		.loc 1 326 0
 834 0452 7A48     		ldr	r0, .L94
 323:../itwoc.c    **** 			DMX_8 = 1; // Set status of 8 bit DMX
 835              		.loc 1 323 0
 836 0454 834E     		ldr	r6, .L94+40
 324:../itwoc.c    **** 			DMX_16 = 0; // Clear 16 bit
 837              		.loc 1 324 0
 838 0456 844B     		ldr	r3, .L94+44
 839              		.loc 1 326 0
 840 0458 0088     		ldrh	r0, [r0]
 841 045a 844D     		ldr	r5, .L94+48
 323:../itwoc.c    **** 			DMX_8 = 1; // Set status of 8 bit DMX
 842              		.loc 1 323 0
 843 045c 0127     		mov	r7, #1
 324:../itwoc.c    **** 			DMX_16 = 0; // Clear 16 bit
 844              		.loc 1 324 0
 845 045e 0022     		mov	r2, #0
 323:../itwoc.c    **** 			DMX_8 = 1; // Set status of 8 bit DMX
 846              		.loc 1 323 0
 847 0460 3760     		str	r7, [r6]
 324:../itwoc.c    **** 			DMX_16 = 0; // Clear 16 bit
 848              		.loc 1 324 0
 849 0462 1A60     		str	r2, [r3]
 850              		.loc 1 326 0
 851 0464 2880     		strh	r0, [r5]
 327:../itwoc.c    **** 			flashBuffer[9] = 0x8;
 852              		.loc 1 327 0
 853 0466 774C     		ldr	r4, .L94+8
 854 0468 0821     		mov	r1, #8
 855 046a 0EE0     		b	.L89
 856              	.L35:
 328:../itwoc.c    **** 			flashBuffer[10] = DataTotal;
 329:../itwoc.c    **** 		}
 330:../itwoc.c    **** 
 331:../itwoc.c    **** 
 332:../itwoc.c    **** 		else if (Command == DMX16BIT) // Configuration for 16 bit DMX
 857              		.loc 1 332 0
 858 046c 3428     		cmp	r0, #52
 859 046e 00D0     		beq	.LCB687
 860 0470 E2E0     		b	.L1	@long jump
 861              	.LCB687:
 333:../itwoc.c    **** 		{
 334:../itwoc.c    **** 			DMX_8 = 0; // Clear status of 8 bit DMX
 335:../itwoc.c    **** 			DMX_16 = 1; // Set status of 16 bit DMX
 336:../itwoc.c    **** 
 337:../itwoc.c    **** 
 338:../itwoc.c    **** 			dmx_RedH = DataTotal;
 862              		.loc 1 338 0
 863 0472 724A     		ldr	r2, .L94
 334:../itwoc.c    **** 			DMX_8 = 0; // Clear status of 8 bit DMX
 864              		.loc 1 334 0
 865 0474 7B4F     		ldr	r7, .L94+40
 866 0476 0024     		mov	r4, #0
 335:../itwoc.c    **** 			DMX_16 = 1; // Set status of 16 bit DMX
 867              		.loc 1 335 0
 868 0478 7B4B     		ldr	r3, .L94+44
 869              		.loc 1 338 0
 870 047a 1088     		ldrh	r0, [r2]
 871 047c 7B4D     		ldr	r5, .L94+48
 334:../itwoc.c    **** 			DMX_8 = 0; // Clear status of 8 bit DMX
 872              		.loc 1 334 0
 873 047e 3C60     		str	r4, [r7]
 335:../itwoc.c    **** 			DMX_16 = 1; // Set status of 16 bit DMX
 874              		.loc 1 335 0
 875 0480 0126     		mov	r6, #1
 339:../itwoc.c    **** 			flashBuffer[9] = 0x16;
 876              		.loc 1 339 0
 877 0482 704C     		ldr	r4, .L94+8
 335:../itwoc.c    **** 			DMX_16 = 1; // Set status of 16 bit DMX
 878              		.loc 1 335 0
 879 0484 1E60     		str	r6, [r3]
 338:../itwoc.c    **** 			dmx_RedH = DataTotal;
 880              		.loc 1 338 0
 881 0486 2880     		strh	r0, [r5]
 882              		.loc 1 339 0
 883 0488 1621     		mov	r1, #22
 884              	.L89:
 885 048a 6162     		str	r1, [r4, #36]
 340:../itwoc.c    **** 			flashBuffer[10] = DataTotal;
 886              		.loc 1 340 0
 887 048c A062     		str	r0, [r4, #40]
 888 048e D3E0     		b	.L1
 889              	.L12:
 341:../itwoc.c    **** 		}
 342:../itwoc.c    **** 
 343:../itwoc.c    **** 
 344:../itwoc.c    **** 	}
 345:../itwoc.c    **** 
 346:../itwoc.c    **** 
 347:../itwoc.c    **** 
 348:../itwoc.c    **** 	else if (byteCount == 5)
 890              		.loc 1 348 0
 891 0490 052E     		cmp	r6, #5
 892 0492 32D1     		bne	.L36
 349:../itwoc.c    **** 	{
 350:../itwoc.c    **** 
 351:../itwoc.c    **** 		if (Command == INTENSITY_RGB) // Blue Command
 893              		.loc 1 351 0
 894 0494 764C     		ldr	r4, .L94+52
 895 0496 2078     		ldrb	r0, [r4]
 896 0498 1428     		cmp	r0, #20
 897 049a 09D1     		bne	.L37
 352:../itwoc.c    **** 		{
 353:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 898              		.loc 1 353 0
 899 049c 674C     		ldr	r4, .L94
 354:../itwoc.c    **** 			Lamphandle.Intensity_Green = DataTotal;
 900              		.loc 1 354 0
 901 049e 6D4E     		ldr	r6, .L94+24
 353:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 902              		.loc 1 353 0
 903 04a0 2088     		ldrh	r0, [r4]
 355:../itwoc.c    **** 			flashBuffer[2] = DataTotal;
 904              		.loc 1 355 0
 905 04a2 684B     		ldr	r3, .L94+8
 353:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 906              		.loc 1 353 0
 907 04a4 0105     		lsl	r1, r0, #20
 908 04a6 0F0D     		lsr	r7, r1, #20
 909 04a8 2780     		strh	r7, [r4]
 354:../itwoc.c    **** 			Lamphandle.Intensity_Green = DataTotal;
 910              		.loc 1 354 0
 911 04aa 7760     		str	r7, [r6, #4]
 912              		.loc 1 355 0
 913 04ac 9F60     		str	r7, [r3, #8]
 914 04ae C3E0     		b	.L1
 915              	.L37:
 356:../itwoc.c    **** 		}
 357:../itwoc.c    **** 
 358:../itwoc.c    **** 		else if (Command == CURRENT_RGB) // RGB Command
 916              		.loc 1 358 0
 917 04b0 2428     		cmp	r0, #36
 918 04b2 09D1     		bne	.L38
 359:../itwoc.c    **** 		{
 360:../itwoc.c    **** 			DataTotal &= 0x00FF;
 919              		.loc 1 360 0
 920 04b4 614D     		ldr	r5, .L94
 361:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle4, DataTotal);
 921              		.loc 1 361 0
 922 04b6 6F48     		ldr	r0, .L94+56
 360:../itwoc.c    **** 			DataTotal &= 0x00FF;
 923              		.loc 1 360 0
 924 04b8 2978     		ldrb	r1, [r5]
 925 04ba 2980     		strh	r1, [r5]
 926              		.loc 1 361 0
 927 04bc FFF7FEFF 		bl	BCCUCH01_SetIntensity
 928              	.LVL49:
 362:../itwoc.c    **** 			flashBuffer[5] = DataTotal;
 929              		.loc 1 362 0
 930 04c0 2A88     		ldrh	r2, [r5]
 931              	.L85:
 932 04c2 604C     		ldr	r4, .L94+8
 933 04c4 6261     		str	r2, [r4, #20]
 934 04c6 B7E0     		b	.L1
 935              	.L38:
 363:../itwoc.c    **** 		}
 364:../itwoc.c    **** 
 365:../itwoc.c    **** 		else if (Command == DIRECTACCESS_READ || Command == DIRECTACCESS_MOVE || Command == DIRECTACCESS_
 936              		.loc 1 365 0
 937 04c8 011C     		mov	r1, r0
 938 04ca 7031     		add	r1, r1, #112
 939 04cc CFB2     		uxtb	r7, r1
 940 04ce 032F     		cmp	r7, #3
 941 04d0 07D8     		bhi	.L39
 366:../itwoc.c    **** 		{
 367:../itwoc.c    **** 			registerAddress = registerAddress << 16;
 368:../itwoc.c    **** 			registerAddress |= DataTotal; // get registerAddress;
 942              		.loc 1 368 0
 943 04d2 624D     		ldr	r5, .L94+32
 944 04d4 594E     		ldr	r6, .L94
 367:../itwoc.c    **** 			registerAddress = registerAddress << 16;
 945              		.loc 1 367 0
 946 04d6 2B68     		ldr	r3, [r5]
 947              		.loc 1 368 0
 948 04d8 3488     		ldrh	r4, [r6]
 367:../itwoc.c    **** 			registerAddress = registerAddress << 16;
 949              		.loc 1 367 0
 950 04da 1A04     		lsl	r2, r3, #16
 951              	.L88:
 952              		.loc 1 368 0
 953 04dc 2243     		orr	r2, r4
 954              	.L87:
 955 04de 2A60     		str	r2, [r5]
 956 04e0 AAE0     		b	.L1
 957              	.L39:
 369:../itwoc.c    **** 		}
 370:../itwoc.c    **** 
 371:../itwoc.c    **** 		else if (Command == DMX8BIT)
 958              		.loc 1 371 0
 959 04e2 3328     		cmp	r0, #51
 960 04e4 53D0     		beq	.L90
 961              	.L40:
 372:../itwoc.c    **** 		{
 373:../itwoc.c    **** 			dmx_GreenH = DataTotal;
 374:../itwoc.c    **** 			flashBuffer[12] = DataTotal;
 375:../itwoc.c    **** 		}
 376:../itwoc.c    **** 
 377:../itwoc.c    **** 		else if (Command == DMX16BIT)
 962              		.loc 1 377 0
 963 04e6 3428     		cmp	r0, #52
 964 04e8 00D0     		beq	.LCB773
 965 04ea A5E0     		b	.L1	@long jump
 966              	.LCB773:
 378:../itwoc.c    **** 		{
 379:../itwoc.c    **** 
 380:../itwoc.c    **** 			dmx_RedL = DataTotal;
 967              		.loc 1 380 0
 968 04ec 534D     		ldr	r5, .L94
 969 04ee 624B     		ldr	r3, .L94+60
 970 04f0 2E88     		ldrh	r6, [r5]
 381:../itwoc.c    **** 
 382:../itwoc.c    **** 			flashBuffer[11] = dmx_RedL;
 971              		.loc 1 382 0
 972 04f2 544A     		ldr	r2, .L94+8
 380:../itwoc.c    **** 			dmx_RedL = DataTotal;
 973              		.loc 1 380 0
 974 04f4 1E80     		strh	r6, [r3]
 975              		.loc 1 382 0
 976 04f6 D662     		str	r6, [r2, #44]
 977 04f8 9EE0     		b	.L1
 978              	.L36:
 383:../itwoc.c    **** 
 384:../itwoc.c    **** 		}
 385:../itwoc.c    **** 
 386:../itwoc.c    **** 	}
 387:../itwoc.c    **** 
 388:../itwoc.c    **** 	else if (byteCount == 7)
 979              		.loc 1 388 0
 980 04fa 072E     		cmp	r6, #7
 981 04fc 4ED1     		bne	.L41
 389:../itwoc.c    **** 	{
 390:../itwoc.c    **** 
 391:../itwoc.c    **** 
 392:../itwoc.c    **** 		if (Command == INTENSITY_RGB)
 982              		.loc 1 392 0
 983 04fe 5C4A     		ldr	r2, .L94+52
 984 0500 1578     		ldrb	r5, [r2]
 985 0502 142D     		cmp	r5, #20
 986 0504 0DD1     		bne	.L42
 393:../itwoc.c    **** 		{
 394:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 987              		.loc 1 394 0
 988 0506 4D4F     		ldr	r7, .L94
 395:../itwoc.c    **** 			Lamphandle.Intensity_Blue = DataTotal;
 989              		.loc 1 395 0
 990 0508 5249     		ldr	r1, .L94+24
 394:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 991              		.loc 1 394 0
 992 050a 3D88     		ldrh	r5, [r7]
 396:../itwoc.c    **** 			COLORLAMP01_SetColor(&COLORLAMP01_ConfigHandle0, &Lamphandle);
 993              		.loc 1 396 0
 994 050c 5B48     		ldr	r0, .L94+64
 394:../itwoc.c    **** 			DataTotal &= 0x0FFF;
 995              		.loc 1 394 0
 996 050e 2E05     		lsl	r6, r5, #20
 997 0510 330D     		lsr	r3, r6, #20
 998 0512 3B80     		strh	r3, [r7]
 395:../itwoc.c    **** 			Lamphandle.Intensity_Blue = DataTotal;
 999              		.loc 1 395 0
 1000 0514 8B60     		str	r3, [r1, #8]
 1001              		.loc 1 396 0
 1002 0516 FFF7FEFF 		bl	COLORLAMP01_SetColor
 1003              	.LVL50:
 397:../itwoc.c    **** 			flashBuffer[3] = DataTotal;
 1004              		.loc 1 397 0
 1005 051a 3A88     		ldrh	r2, [r7]
 1006              	.L83:
 1007 051c 494C     		ldr	r4, .L94+8
 1008 051e E260     		str	r2, [r4, #12]
 1009 0520 8AE0     		b	.L1
 1010              	.L42:
 398:../itwoc.c    **** 		}
 399:../itwoc.c    **** 
 400:../itwoc.c    **** 		else if (Command == CURRENT_RGB) // RGB Command
 1011              		.loc 1 400 0
 1012 0522 242D     		cmp	r5, #36
 1013 0524 1DD1     		bne	.L43
 401:../itwoc.c    **** 		{
 402:../itwoc.c    **** 			DataTotal &= 0x00FF;
 1014              		.loc 1 402 0
 1015 0526 454F     		ldr	r7, .L94
 403:../itwoc.c    **** 			BCCUCH01_SetIntensity(&BCCUCH01_Handle5, DataTotal);
 1016              		.loc 1 403 0
 1017 0528 554D     		ldr	r5, .L94+68
 402:../itwoc.c    **** 			DataTotal &= 0x00FF;
 1018              		.loc 1 402 0
 1019 052a 3978     		ldrb	r1, [r7]
 1020              		.loc 1 403 0
 1021 052c 281C     		mov	r0, r5
 402:../itwoc.c    **** 			DataTotal &= 0x00FF;
 1022              		.loc 1 402 0
 1023 052e 3980     		strh	r1, [r7]
 1024              		.loc 1 403 0
 1025 0530 FFF7FEFF 		bl	BCCUCH01_SetIntensity
 1026              	.LVL51:
 404:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle3, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle3.ChNum));
 1027              		.loc 1 404 0
 1028 0534 5348     		ldr	r0, .L94+72
 1029 0536 0126     		mov	r6, #1
 1030 0538 8368     		ldr	r3, [r0, #8]
 1031 053a 311C     		mov	r1, r6
 1032 053c 9940     		lsl	r1, r1, r3
 1033 053e FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 1034              	.LVL52:
 405:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle4, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle4.ChNum));
 1035              		.loc 1 405 0
 1036 0542 4C48     		ldr	r0, .L94+56
 1037 0544 311C     		mov	r1, r6
 1038 0546 8468     		ldr	r4, [r0, #8]
 1039 0548 A140     		lsl	r1, r1, r4
 1040 054a FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 1041              	.LVL53:
 406:../itwoc.c    **** 			BCCUCH01_StartLinearWalk(&BCCUCH01_Handle5, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle5.ChNum));
 1042              		.loc 1 406 0
 1043 054e A868     		ldr	r0, [r5, #8]
 1044 0550 311C     		mov	r1, r6
 1045 0552 8140     		lsl	r1, r1, r0
 1046 0554 281C     		mov	r0, r5
 1047 0556 FFF7FEFF 		bl	BCCUCH01_StartLinearWalk
 1048              	.LVL54:
 407:../itwoc.c    **** 			flashBuffer[6] = DataTotal;
 1049              		.loc 1 407 0
 1050 055a 3988     		ldrh	r1, [r7]
 1051              	.L86:
 1052 055c 394C     		ldr	r4, .L94+8
 1053 055e A161     		str	r1, [r4, #24]
 1054 0560 6AE0     		b	.L1
 1055              	.L43:
 408:../itwoc.c    **** 		}
 409:../itwoc.c    **** 
 410:../itwoc.c    **** 		else if (Command == DIRECTACCESS_MOVE || Command == DIRECTACCESS_AND  || Command == DIRECTACCESS_
 1056              		.loc 1 410 0
 1057 0562 2F1C     		mov	r7, r5
 1058 0564 6F37     		add	r7, r7, #111
 1059 0566 FBB2     		uxtb	r3, r7
 1060 0568 022B     		cmp	r3, #2
 1061 056a 03D8     		bhi	.L44
 411:../itwoc.c    **** 		{
 412:../itwoc.c    **** 
 413:../itwoc.c    **** 			DataDirect = 0;
 414:../itwoc.c    **** 			DataDirect = DataTotal;
 1062              		.loc 1 414 0
 1063 056c 334C     		ldr	r4, .L94
 1064 056e 464D     		ldr	r5, .L94+76
 1065 0570 2288     		ldrh	r2, [r4]
 1066 0572 B4E7     		b	.L87
 1067              	.L44:
 415:../itwoc.c    **** 		}
 416:../itwoc.c    **** 
 417:../itwoc.c    **** 		else if (Command == DMX8BIT)
 1068              		.loc 1 417 0
 1069 0574 332D     		cmp	r5, #51
 1070 0576 08D1     		bne	.L45
 418:../itwoc.c    **** 		{
 419:../itwoc.c    **** 			dmx_BlueH = DataTotal;
 1071              		.loc 1 419 0
 1072 0578 3049     		ldr	r1, .L94
 1073 057a 444E     		ldr	r6, .L94+80
 1074 057c 0888     		ldrh	r0, [r1]
 420:../itwoc.c    **** 			flashBuffer[14] = DataTotal;
 1075              		.loc 1 420 0
 1076 057e 314A     		ldr	r2, .L94+8
 421:../itwoc.c    **** 			byteCount = 0;
 1077              		.loc 1 421 0
 1078 0580 0025     		mov	r5, #0
 419:../itwoc.c    **** 			dmx_BlueH = DataTotal;
 1079              		.loc 1 419 0
 1080 0582 3080     		strh	r0, [r6]
 420:../itwoc.c    **** 			flashBuffer[14] = DataTotal;
 1081              		.loc 1 420 0
 1082 0584 9063     		str	r0, [r2, #56]
 1083              		.loc 1 421 0
 1084 0586 2560     		str	r5, [r4]
 1085 0588 56E0     		b	.L1
 1086              	.L45:
 422:../itwoc.c    **** 		}
 423:../itwoc.c    **** 
 424:../itwoc.c    **** 		else if (Command == DMX16BIT)
 1087              		.loc 1 424 0
 1088 058a 342D     		cmp	r5, #52
 1089 058c 54D1     		bne	.L1
 1090              	.L90:
 425:../itwoc.c    **** 		{
 426:../itwoc.c    **** 			dmx_GreenH = DataTotal;
 1091              		.loc 1 426 0
 1092 058e 2B4C     		ldr	r4, .L94
 1093 0590 3F49     		ldr	r1, .L94+84
 1094 0592 2088     		ldrh	r0, [r4]
 427:../itwoc.c    **** 			flashBuffer[12] = DataTotal;
 1095              		.loc 1 427 0
 1096 0594 2B4F     		ldr	r7, .L94+8
 426:../itwoc.c    **** 			dmx_GreenH = DataTotal;
 1097              		.loc 1 426 0
 1098 0596 0880     		strh	r0, [r1]
 1099              		.loc 1 427 0
 1100 0598 3863     		str	r0, [r7, #48]
 1101 059a 4DE0     		b	.L1
 1102              	.L41:
 428:../itwoc.c    **** 		}
 429:../itwoc.c    **** 
 430:../itwoc.c    **** 
 431:../itwoc.c    **** 
 432:../itwoc.c    **** 		//byteCount = 0;
 433:../itwoc.c    **** 	}
 434:../itwoc.c    **** 
 435:../itwoc.c    **** 	else if (byteCount == 9)
 1103              		.loc 1 435 0
 1104 059c 092E     		cmp	r6, #9
 1105 059e 32D1     		bne	.L46
 436:../itwoc.c    **** 	{
 437:../itwoc.c    **** 
 438:../itwoc.c    **** 		if (Command == DIRECTACCESS_MOVE)
 1106              		.loc 1 438 0
 1107 05a0 334A     		ldr	r2, .L94+52
 1108 05a2 1778     		ldrb	r7, [r2]
 1109 05a4 912F     		cmp	r7, #145
 1110 05a6 0AD1     		bne	.L47
 1111              	.LBB2:
 439:../itwoc.c    **** 		{
 440:../itwoc.c    **** 
 441:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1112              		.loc 1 441 0
 1113 05a8 374F     		ldr	r7, .L94+76
 442:../itwoc.c    **** 			DataDirect |= DataTotal;
 1114              		.loc 1 442 0
 1115 05aa 244A     		ldr	r2, .L94
 441:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1116              		.loc 1 441 0
 1117 05ac 3B68     		ldr	r3, [r7]
 443:../itwoc.c    **** 			uint32_t *access;
 444:../itwoc.c    **** 			access = registerAddress;
 445:../itwoc.c    **** 			*access = DataDirect;
 1118              		.loc 1 445 0
 1119 05ae 2B48     		ldr	r0, .L94+32
 442:../itwoc.c    **** 			DataDirect |= DataTotal;
 1120              		.loc 1 442 0
 1121 05b0 1588     		ldrh	r5, [r2]
 441:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1122              		.loc 1 441 0
 1123 05b2 1904     		lsl	r1, r3, #16
 1124              		.loc 1 445 0
 1125 05b4 0668     		ldr	r6, [r0]
 442:../itwoc.c    **** 			DataDirect |= DataTotal;
 1126              		.loc 1 442 0
 1127 05b6 2943     		orr	r1, r5
 1128 05b8 3960     		str	r1, [r7]
 1129              	.LVL55:
 1130              		.loc 1 445 0
 1131 05ba 3160     		str	r1, [r6]
 1132 05bc 3CE0     		b	.L1
 1133              	.LVL56:
 1134              	.L47:
 1135              	.LBE2:
 446:../itwoc.c    **** 
 447:../itwoc.c    **** 		}
 448:../itwoc.c    **** 
 449:../itwoc.c    **** 		else if (Command == DIRECTACCESS_AND)
 1136              		.loc 1 449 0
 1137 05be 922F     		cmp	r7, #146
 1138 05c0 0BD1     		bne	.L48
 1139              	.LBB3:
 450:../itwoc.c    **** 		{
 451:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1140              		.loc 1 451 0
 1141 05c2 3149     		ldr	r1, .L94+76
 452:../itwoc.c    **** 			DataDirect |= DataTotal;
 1142              		.loc 1 452 0
 1143 05c4 1D4B     		ldr	r3, .L94
 451:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1144              		.loc 1 451 0
 1145 05c6 0868     		ldr	r0, [r1]
 1146              		.loc 1 452 0
 1147 05c8 1F88     		ldrh	r7, [r3]
 453:../itwoc.c    **** 			uint32_t *access;
 454:../itwoc.c    **** 			access = registerAddress;
 1148              		.loc 1 454 0
 1149 05ca 244E     		ldr	r6, .L94+32
 451:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1150              		.loc 1 451 0
 1151 05cc 0204     		lsl	r2, r0, #16
 452:../itwoc.c    **** 			DataDirect |= DataTotal;
 1152              		.loc 1 452 0
 1153 05ce 3A43     		orr	r2, r7
 1154              		.loc 1 454 0
 1155 05d0 3568     		ldr	r5, [r6]
 1156              	.LVL57:
 452:../itwoc.c    **** 			DataDirect |= DataTotal;
 1157              		.loc 1 452 0
 1158 05d2 0A60     		str	r2, [r1]
 455:../itwoc.c    **** 			*access &= DataDirect;
 1159              		.loc 1 455 0
 1160 05d4 2C68     		ldr	r4, [r5]
 1161 05d6 2240     		and	r2, r4
 1162 05d8 81E7     		b	.L87
 1163              	.LVL58:
 1164              	.L48:
 1165              	.LBE3:
 456:../itwoc.c    **** 		}
 457:../itwoc.c    **** 
 458:../itwoc.c    **** 		else if (Command == DIRECTACCESS_OR)
 1166              		.loc 1 458 0
 1167 05da 932F     		cmp	r7, #147
 1168 05dc 0AD1     		bne	.L49
 1169              	.LBB4:
 459:../itwoc.c    **** 		{
 460:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1170              		.loc 1 460 0
 1171 05de 2A49     		ldr	r1, .L94+76
 461:../itwoc.c    **** 			DataDirect |= DataTotal;
 1172              		.loc 1 461 0
 1173 05e0 164B     		ldr	r3, .L94
 460:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1174              		.loc 1 460 0
 1175 05e2 0868     		ldr	r0, [r1]
 1176              		.loc 1 461 0
 1177 05e4 1F88     		ldrh	r7, [r3]
 462:../itwoc.c    **** 			uint32_t *access;
 463:../itwoc.c    **** 			access = registerAddress;
 1178              		.loc 1 463 0
 1179 05e6 1D4E     		ldr	r6, .L94+32
 460:../itwoc.c    **** 			DataDirect = DataDirect << 16;
 1180              		.loc 1 460 0
 1181 05e8 0204     		lsl	r2, r0, #16
 461:../itwoc.c    **** 			DataDirect |= DataTotal;
 1182              		.loc 1 461 0
 1183 05ea 3A43     		orr	r2, r7
 1184              		.loc 1 463 0
 1185 05ec 3568     		ldr	r5, [r6]
 1186              	.LVL59:
 461:../itwoc.c    **** 			DataDirect |= DataTotal;
 1187              		.loc 1 461 0
 1188 05ee 0A60     		str	r2, [r1]
 464:../itwoc.c    **** 			*access |= DataDirect;
 1189              		.loc 1 464 0
 1190 05f0 2C68     		ldr	r4, [r5]
 1191 05f2 73E7     		b	.L88
 1192              	.LVL60:
 1193              	.L49:
 1194              	.LBE4:
 465:../itwoc.c    **** 		}
 466:../itwoc.c    **** 
 467:../itwoc.c    **** 		else if (Command == DMX16BIT)
 1195              		.loc 1 467 0
 1196 05f4 342F     		cmp	r7, #52
 1197 05f6 1FD1     		bne	.L1
 468:../itwoc.c    **** 		{
 469:../itwoc.c    **** 
 470:../itwoc.c    **** 			dmx_GreenL = DataTotal;
 1198              		.loc 1 470 0
 1199 05f8 1049     		ldr	r1, .L94
 1200 05fa 264D     		ldr	r5, .L94+88
 1201 05fc 0E88     		ldrh	r6, [r1]
 471:../itwoc.c    **** 			flashBuffer[13] = DataTotal;
 1202              		.loc 1 471 0
 1203 05fe 114C     		ldr	r4, .L94+8
 470:../itwoc.c    **** 			dmx_GreenL = DataTotal;
 1204              		.loc 1 470 0
 1205 0600 2E80     		strh	r6, [r5]
 1206              		.loc 1 471 0
 1207 0602 6663     		str	r6, [r4, #52]
 1208 0604 18E0     		b	.L1
 1209              	.L46:
 472:../itwoc.c    **** 		}
 473:../itwoc.c    **** 
 474:../itwoc.c    **** 		//byteCount = 0;
 475:../itwoc.c    **** 	}
 476:../itwoc.c    **** 
 477:../itwoc.c    **** 	else if (byteCount == 11)
 1210              		.loc 1 477 0
 1211 0606 0B2E     		cmp	r6, #11
 1212 0608 0AD1     		bne	.L50
 478:../itwoc.c    **** 	{
 479:../itwoc.c    **** 
 480:../itwoc.c    **** 		if (Command == DMX16BIT)
 1213              		.loc 1 480 0
 1214 060a 1949     		ldr	r1, .L94+52
 1215 060c 0E78     		ldrb	r6, [r1]
 1216 060e 342E     		cmp	r6, #52
 1217 0610 12D1     		bne	.L1
 481:../itwoc.c    **** 		{
 482:../itwoc.c    **** 
 483:../itwoc.c    **** 			dmx_BlueH = DataTotal;
 1218              		.loc 1 483 0
 1219 0612 0A4D     		ldr	r5, .L94
 1220 0614 1D4B     		ldr	r3, .L94+80
 1221 0616 2C88     		ldrh	r4, [r5]
 484:../itwoc.c    **** 			flashBuffer[14] = DataTotal;
 1222              		.loc 1 484 0
 1223 0618 0A48     		ldr	r0, .L94+8
 483:../itwoc.c    **** 			dmx_BlueH = DataTotal;
 1224              		.loc 1 483 0
 1225 061a 1C80     		strh	r4, [r3]
 1226              		.loc 1 484 0
 1227 061c 8463     		str	r4, [r0, #56]
 1228 061e 0BE0     		b	.L1
 1229              	.L50:
 485:../itwoc.c    **** 		}
 486:../itwoc.c    **** 	}
 487:../itwoc.c    **** 
 488:../itwoc.c    **** 	else if (byteCount == 13)
 1230              		.loc 1 488 0
 1231 0620 0D2E     		cmp	r6, #13
 1232 0622 09D1     		bne	.L1
 489:../itwoc.c    **** 	{
 490:../itwoc.c    **** 
 491:../itwoc.c    **** 		if (Command == DMX16BIT)
 1233              		.loc 1 491 0
 1234 0624 124D     		ldr	r5, .L94+52
 1235 0626 2C78     		ldrb	r4, [r5]
 1236 0628 342C     		cmp	r4, #52
 1237 062a 05D1     		bne	.L1
 492:../itwoc.c    **** 		{
 493:../itwoc.c    **** 
 494:../itwoc.c    **** 			dmx_BlueL = DataTotal;
 1238              		.loc 1 494 0
 1239 062c 034B     		ldr	r3, .L94
 1240 062e 1A4A     		ldr	r2, .L94+92
 1241 0630 1888     		ldrh	r0, [r3]
 495:../itwoc.c    **** 			flashBuffer[15] = DataTotal;
 1242              		.loc 1 495 0
 1243 0632 044F     		ldr	r7, .L94+8
 494:../itwoc.c    **** 			dmx_BlueL = DataTotal;
 1244              		.loc 1 494 0
 1245 0634 1080     		strh	r0, [r2]
 1246              		.loc 1 495 0
 1247 0636 F863     		str	r0, [r7, #60]
 1248              	.LVL61:
 1249              	.L1:
 496:../itwoc.c    **** 		}
 497:../itwoc.c    **** 	}
 498:../itwoc.c    **** 
 499:../itwoc.c    **** 
 500:../itwoc.c    **** 
 501:../itwoc.c    **** }
 1250              		.loc 1 501 0
 1251 0638 05B0     		add	sp, sp, #20
 1252              		@ sp needed for prologue
 1253              	.LVL62:
 1254 063a F0BD     		pop	{r4, r5, r6, r7, pc}
 1255              	.L95:
 1256              		.align	2
 1257              	.L94:
 1258 063c 00000000 		.word	DataTotal
 1259 0640 00000000 		.word	PWMSP003_Handle2
 1260 0644 00000000 		.word	flashBuffer
 1261 0648 00000000 		.word	BCCUCH01_Handle0
 1262 064c 00000000 		.word	BCCUCH01_Handle1
 1263 0650 00000000 		.word	BCCUCH01_Handle2
 1264 0654 00000000 		.word	Lamphandle
 1265 0658 00000000 		.word	BCCUDIM01_Handle0
 1266 065c 00000000 		.word	registerAddress
 1267 0660 00000000 		.word	startingSlot
 1268 0664 00000000 		.word	DMX_8
 1269 0668 00000000 		.word	DMX_16
 1270 066c 00000000 		.word	dmx_RedH
 1271 0670 00000000 		.word	Command
 1272 0674 00000000 		.word	BCCUCH01_Handle4
 1273 0678 00000000 		.word	dmx_RedL
 1274 067c 00000000 		.word	COLORLAMP01_ConfigHandle0
 1275 0680 00000000 		.word	BCCUCH01_Handle5
 1276 0684 00000000 		.word	BCCUCH01_Handle3
 1277 0688 00000000 		.word	DataDirect
 1278 068c 00000000 		.word	dmx_BlueH
 1279 0690 00000000 		.word	dmx_GreenH
 1280 0694 00000000 		.word	dmx_GreenL
 1281 0698 00000000 		.word	dmx_BlueL
 1282              		.cfi_endproc
 1283              	.LFE38:
 1285              		.section	.text.USIC0_2_IRQHandler,"ax",%progbits
 1286              		.align	1
 1287              		.global	USIC0_2_IRQHandler
 1288              		.code	16
 1289              		.thumb_func
 1291              	USIC0_2_IRQHandler:
 1292              	.LFB39:
 502:../itwoc.c    **** 
 503:../itwoc.c    **** void I2C_START(void)
 504:../itwoc.c    **** {
 1293              		.loc 1 504 0
 1294              		.cfi_startproc
 1295 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1296              	.LCFI2:
 1297              		.cfi_def_cfa_offset 24
 1298              		.cfi_offset 3, -24
 1299              		.cfi_offset 4, -20
 1300              		.cfi_offset 5, -16
 1301              		.cfi_offset 6, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 505:../itwoc.c    **** 	/*BCCUCH01_SetIntensity(&BCCUCH01_Handle0, 0xFFF);
 506:../itwoc.c    **** 	BCCUCH01_StartLinearWalk(&BCCUCH01_Handle0, GET_MASK_FOR_1CHANNEL(BCCUCH01_Handle0.ChNum));*/
 507:../itwoc.c    **** 	byteCount = 0;
 508:../itwoc.c    **** 	uint8_t send = 0x00;
 509:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->TRBSCR |= 0x8000;
 1304              		.loc 1 509 0
 1305 0002 974E     		ldr	r6, .L130
 507:../itwoc.c    **** 	byteCount = 0;
 1306              		.loc 1 507 0
 1307 0004 9749     		ldr	r1, .L130+4
 1308              		.loc 1 509 0
 1309 0006 3568     		ldr	r5, [r6]
 1310 0008 8020     		mov	r0, #128
 1311 000a 2A1C     		mov	r2, r5
 1312 000c FC32     		add	r2, r2, #252
 1313 000e D469     		ldr	r4, [r2, #28]
 1314 0010 0702     		lsl	r7, r0, #8
 507:../itwoc.c    **** 	byteCount = 0;
 1315              		.loc 1 507 0
 1316 0012 0023     		mov	r3, #0
 1317              		.loc 1 509 0
 1318 0014 3C43     		orr	r4, r7
 507:../itwoc.c    **** 	byteCount = 0;
 1319              		.loc 1 507 0
 1320 0016 0B60     		str	r3, [r1]
 1321              	.LVL63:
 510:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->FMR = 0x00000002U  << USIC_CH_FMR_MTDV_Pos;	// clear TDV and TE
 1322              		.loc 1 510 0
 1323 0018 0221     		mov	r1, #2
 509:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->TRBSCR |= 0x8000;
 1324              		.loc 1 509 0
 1325 001a D461     		str	r4, [r2, #28]
 1326              		.loc 1 510 0
 1327 001c A966     		str	r1, [r5, #104]
 511:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->TRBSCR = USIC_CH_TRBSCR_FLUSHTB_Msk;			// flush FIFO transmit buffer
 1328              		.loc 1 511 0
 1329 001e D761     		str	r7, [r2, #28]
 512:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->PSCR |= USIC_CH_PSCR_CST5_Msk;
 1330              		.loc 1 512 0
 1331 0020 EB6C     		ldr	r3, [r5, #76]
 1332 0022 2022     		mov	r2, #32
 1333 0024 1343     		orr	r3, r2
 1334 0026 EB64     		str	r3, [r5, #76]
 513:../itwoc.c    **** 	I2C003_Handle0.I2CRegs->PSCR |= USIC_CH_PSCR_CST2_Msk;
 1335              		.loc 1 513 0
 1336 0028 EC6C     		ldr	r4, [r5, #76]
 1337 002a 0420     		mov	r0, #4
 1338 002c 0443     		orr	r4, r0
 1339 002e EC64     		str	r4, [r5, #76]
 514:../itwoc.c    **** 
 515:../itwoc.c    **** 	temp = I2C003_Handle0.I2CRegs->PSR_IICMode;
 1340              		.loc 1 515 0
 1341 0030 AD6C     		ldr	r5, [r5, #72]
 1342              	.LVL64:
 516:../itwoc.c    **** 	temp &= 0x00000080;
 1343              		.loc 1 516 0
 1344 0032 8D4F     		ldr	r7, .L130+8
 1345 0034 8021     		mov	r1, #128
 1346 0036 2940     		and	r1, r5
 1347              	.LVL65:
 1348 0038 3960     		str	r1, [r7]
 1349              	.LVL66:
 1350 003a 341C     		mov	r4, r6
 1351 003c 3D1C     		mov	r5, r7
 517:../itwoc.c    **** 	if (temp == 0x00000080) // slave read request event occured
 1352              		.loc 1 517 0
 1353 003e 8029     		cmp	r1, #128
 1354 0040 00D0     		beq	.LCB1092
 1355 0042 08E1     		b	.L97	@long jump
 1356              	.LCB1092:
 518:../itwoc.c    **** 	{
 519:../itwoc.c    **** 
 520:../itwoc.c    **** 		if (Command == READ_INTENSITY_RED)
 1357              		.loc 1 520 0
 1358 0044 894B     		ldr	r3, .L130+12
 1359 0046 1878     		ldrb	r0, [r3]
 1360 0048 8128     		cmp	r0, #129
 1361 004a 04D1     		bne	.L98
 521:../itwoc.c    **** 		{
 522:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1362              		.loc 1 522 0
 1363 004c 884C     		ldr	r4, .L130+16
 1364 004e 0121     		mov	r1, #1
 1365              	.LVL67:
 1366 0050 6170     		strb	r1, [r4, #1]
 523:../itwoc.c    **** 			temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 1367              		.loc 1 523 0
 1368 0052 8848     		ldr	r0, .L130+20
 1369 0054 05E0     		b	.L123
 1370              	.LVL68:
 1371              	.L98:
 524:../itwoc.c    **** 			temp &= 0x00000FFF;
 525:../itwoc.c    **** 			//send = temp >> 8;
 526:../itwoc.c    **** 			send = temp;
 527:../itwoc.c    **** 			data2.Payload = send;
 528:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 529:../itwoc.c    **** 
 530:../itwoc.c    **** 			/*temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 531:../itwoc.c    **** 			temp &= 0x000000FF;*/
 532:../itwoc.c    **** 			send = temp >> 8;
 533:../itwoc.c    **** 			data2.Payload = send;
 534:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 535:../itwoc.c    **** 		}
 536:../itwoc.c    **** 
 537:../itwoc.c    **** 		else if (Command == READ_INTENSITY_GREEN)
 1372              		.loc 1 537 0
 1373 0056 8228     		cmp	r0, #130
 1374 0058 13D1     		bne	.L99
 538:../itwoc.c    **** 		{
 539:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1375              		.loc 1 539 0
 1376 005a 854C     		ldr	r4, .L130+16
 1377 005c 0122     		mov	r2, #1
 540:../itwoc.c    **** 			temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle1);
 1378              		.loc 1 540 0
 1379 005e 8648     		ldr	r0, .L130+24
 539:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1380              		.loc 1 539 0
 1381 0060 6270     		strb	r2, [r4, #1]
 1382              	.L123:
 1383              		.loc 1 540 0
 1384 0062 FFF7FEFF 		bl	BCCUCH01_GetIntensity
 1385              	.LVL69:
 1386              	.L125:
 541:../itwoc.c    **** 			temp &= 0x00000FFF;
 1387              		.loc 1 541 0
 1388 0066 0305     		lsl	r3, r0, #20
 1389 0068 180D     		lsr	r0, r3, #20
 1390              	.LVL70:
 1391 006a 3860     		str	r0, [r7]
 1392              	.LVL71:
 542:../itwoc.c    **** 			//send = temp >> 8;
 543:../itwoc.c    **** 			send = temp;
 544:../itwoc.c    **** 			data2.Payload = send;
 1393              		.loc 1 544 0
 1394 006c 2070     		strb	r0, [r4]
 1395              	.LVL72:
 1396              	.L124:
 545:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1397              		.loc 1 545 0
 1398 006e 211C     		mov	r1, r4
 1399 0070 301C     		mov	r0, r6
 1400 0072 FFF7FEFF 		bl	I2C003_WriteData
 1401              	.LVL73:
 546:../itwoc.c    **** 
 547:../itwoc.c    **** 			send = temp >> 8;
 1402              		.loc 1 547 0
 1403 0076 3F68     		ldr	r7, [r7]
 548:../itwoc.c    **** 			data2.Payload = send;
 549:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1404              		.loc 1 549 0
 1405 0078 301C     		mov	r0, r6
 547:../itwoc.c    **** 			send = temp >> 8;
 1406              		.loc 1 547 0
 1407 007a 3D0A     		lsr	r5, r7, #8
 548:../itwoc.c    **** 			data2.Payload = send;
 1408              		.loc 1 548 0
 1409 007c 2570     		strb	r5, [r4]
 1410              		.loc 1 549 0
 1411 007e 211C     		mov	r1, r4
 1412 0080 E7E0     		b	.L122
 1413              	.LVL74:
 1414              	.L99:
 550:../itwoc.c    **** 		}
 551:../itwoc.c    **** 
 552:../itwoc.c    **** 		else if (Command == READ_INTENSITY_BLUE)
 1415              		.loc 1 552 0
 1416 0082 8328     		cmp	r0, #131
 1417 0084 04D1     		bne	.L100
 553:../itwoc.c    **** 		{
 554:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1418              		.loc 1 554 0
 1419 0086 7A4C     		ldr	r4, .L130+16
 1420 0088 0125     		mov	r5, #1
 1421 008a 6570     		strb	r5, [r4, #1]
 555:../itwoc.c    **** 			temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle2);
 1422              		.loc 1 555 0
 1423 008c 7B48     		ldr	r0, .L130+28
 1424 008e E8E7     		b	.L123
 1425              	.L100:
 556:../itwoc.c    **** 			temp &= 0x00000FFF;
 557:../itwoc.c    **** 			//send = temp >> 8;
 558:../itwoc.c    **** 			send = temp;
 559:../itwoc.c    **** 			data2.Payload = send;
 560:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 561:../itwoc.c    **** 
 562:../itwoc.c    **** 			/*temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 563:../itwoc.c    **** 						temp &= 0x000000FF;*/
 564:../itwoc.c    **** 			send = temp >> 8;
 565:../itwoc.c    **** 			data2.Payload = send;
 566:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 567:../itwoc.c    **** 		}
 568:../itwoc.c    **** 
 569:../itwoc.c    **** 
 570:../itwoc.c    **** 		else if (Command == READ_CURRENT_RED)
 1426              		.loc 1 570 0
 1427 0090 8428     		cmp	r0, #132
 1428 0092 04D1     		bne	.L101
 571:../itwoc.c    **** 		{
 572:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1429              		.loc 1 572 0
 1430 0094 764C     		ldr	r4, .L130+16
 1431 0096 0120     		mov	r0, #1
 1432 0098 6070     		strb	r0, [r4, #1]
 573:../itwoc.c    **** 			temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle3);
 1433              		.loc 1 573 0
 1434 009a 7948     		ldr	r0, .L130+32
 1435 009c E1E7     		b	.L123
 1436              	.L101:
 574:../itwoc.c    **** 			temp &= 0x00000FFF;
 575:../itwoc.c    **** 			//send = temp >> 8;
 576:../itwoc.c    **** 			send = temp;
 577:../itwoc.c    **** 			data2.Payload = send;
 578:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 579:../itwoc.c    **** 
 580:../itwoc.c    **** 			/*temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 581:../itwoc.c    **** 					temp &= 0x000000FF;*/
 582:../itwoc.c    **** 			send = temp >> 8;
 583:../itwoc.c    **** 			data2.Payload = send;
 584:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 585:../itwoc.c    **** 		}
 586:../itwoc.c    **** 
 587:../itwoc.c    **** 		else if (Command == READ_CURRENT_GREEN)
 1437              		.loc 1 587 0
 1438 009e 8528     		cmp	r0, #133
 1439 00a0 04D1     		bne	.L102
 588:../itwoc.c    **** 		{
 589:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1440              		.loc 1 589 0
 1441 00a2 734C     		ldr	r4, .L130+16
 1442 00a4 0123     		mov	r3, #1
 1443 00a6 6370     		strb	r3, [r4, #1]
 590:../itwoc.c    **** 			temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle4);
 1444              		.loc 1 590 0
 1445 00a8 7648     		ldr	r0, .L130+36
 1446 00aa DAE7     		b	.L123
 1447              	.L102:
 591:../itwoc.c    **** 			temp &= 0x00000FFF;
 592:../itwoc.c    **** 			//send = temp >> 8;
 593:../itwoc.c    **** 			send = temp;
 594:../itwoc.c    **** 			data2.Payload = send;
 595:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 596:../itwoc.c    **** 
 597:../itwoc.c    **** 			send = temp >> 8;
 598:../itwoc.c    **** 			data2.Payload = send;
 599:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 600:../itwoc.c    **** 		}
 601:../itwoc.c    **** 
 602:../itwoc.c    **** 		else if (Command == READ_CURRENT_BLUE)
 1448              		.loc 1 602 0
 1449 00ac 8628     		cmp	r0, #134
 1450 00ae 04D1     		bne	.L103
 603:../itwoc.c    **** 		{
 604:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1451              		.loc 1 604 0
 1452 00b0 6F4C     		ldr	r4, .L130+16
 1453 00b2 0121     		mov	r1, #1
 1454              	.LVL75:
 1455 00b4 6170     		strb	r1, [r4, #1]
 605:../itwoc.c    **** 			temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle5);
 1456              		.loc 1 605 0
 1457 00b6 7448     		ldr	r0, .L130+40
 1458 00b8 D3E7     		b	.L123
 1459              	.LVL76:
 1460              	.L103:
 606:../itwoc.c    **** 			temp &= 0x00000FFF;
 607:../itwoc.c    **** 			//send = temp >> 8;
 608:../itwoc.c    **** 			send = temp;
 609:../itwoc.c    **** 			data2.Payload = send;
 610:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 611:../itwoc.c    **** 
 612:../itwoc.c    **** 			/*temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 613:../itwoc.c    **** 								temp &= 0x000000FF;*/
 614:../itwoc.c    **** 			send = temp >> 8;
 615:../itwoc.c    **** 			data2.Payload = send;
 616:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 617:../itwoc.c    **** 		}
 618:../itwoc.c    **** 
 619:../itwoc.c    **** 		else if (Command == READ_WALKTIME)
 1461              		.loc 1 619 0
 1462 00ba 8A28     		cmp	r0, #138
 1463 00bc 09D1     		bne	.L104
 620:../itwoc.c    **** 		{
 621:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 622:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 623:../itwoc.c    **** 			//RD_REG_SIZE(reg, mask, pos,size)
 624:../itwoc.c    **** 			temp = Lamphandle.LinearWalkPrescaler;
 1464              		.loc 1 624 0
 1465 00be 734B     		ldr	r3, .L130+44
 621:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1466              		.loc 1 621 0
 1467 00c0 6B4C     		ldr	r4, .L130+16
 625:../itwoc.c    **** 			temp &= 0x00003FF;
 1468              		.loc 1 625 0
 1469 00c2 9869     		ldr	r0, [r3, #24]
 621:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1470              		.loc 1 621 0
 1471 00c4 0121     		mov	r1, #1
 1472              	.LVL77:
 1473              		.loc 1 625 0
 1474 00c6 8505     		lsl	r5, r0, #22
 1475 00c8 AA0D     		lsr	r2, r5, #22
 621:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1476              		.loc 1 621 0
 1477 00ca 6170     		strb	r1, [r4, #1]
 1478              		.loc 1 625 0
 1479 00cc 3A60     		str	r2, [r7]
 1480              	.LVL78:
 626:../itwoc.c    **** 			//send = temp >> 8;
 627:../itwoc.c    **** 			send = temp;
 628:../itwoc.c    **** 			data2.Payload = send;
 1481              		.loc 1 628 0
 1482 00ce 2270     		strb	r2, [r4]
 1483 00d0 CDE7     		b	.L124
 1484              	.LVL79:
 1485              	.L104:
 629:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 630:../itwoc.c    **** 
 631:../itwoc.c    **** 			/*temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 632:../itwoc.c    **** 									temp &= 0x000000FF;*/
 633:../itwoc.c    **** 			send = temp >> 8;
 634:../itwoc.c    **** 			data2.Payload = send;
 635:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 636:../itwoc.c    **** 		}
 637:../itwoc.c    **** 
 638:../itwoc.c    **** 		else if (Command == READ_DIMMINGLEVEL)
 1486              		.loc 1 638 0
 1487 00d2 8B28     		cmp	r0, #139
 1488 00d4 06D1     		bne	.L105
 639:../itwoc.c    **** 		{
 640:../itwoc.c    **** 
 641:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1489              		.loc 1 641 0
 1490 00d6 664C     		ldr	r4, .L130+16
 1491 00d8 0122     		mov	r2, #1
 642:../itwoc.c    **** 			temp = BCCUDIM01_GetDimLvl(&BCCUDIM01_Handle0);
 1492              		.loc 1 642 0
 1493 00da 6D48     		ldr	r0, .L130+48
 641:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1494              		.loc 1 641 0
 1495 00dc 6270     		strb	r2, [r4, #1]
 1496              		.loc 1 642 0
 1497 00de FFF7FEFF 		bl	BCCUDIM01_GetDimLvl
 1498              	.LVL80:
 1499 00e2 C0E7     		b	.L125
 1500              	.LVL81:
 1501              	.L105:
 643:../itwoc.c    **** 			//RD_REG_SIZE(reg, mask, pos,size)
 644:../itwoc.c    **** 			temp &= 0x0000FFF;
 645:../itwoc.c    **** 			//send = temp >> 8;
 646:../itwoc.c    **** 			send = temp;
 647:../itwoc.c    **** 			data2.Payload = send;
 648:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 649:../itwoc.c    **** 
 650:../itwoc.c    **** 			/*temp = BCCUCH01_GetIntensity(&BCCUCH01_Handle0);
 651:../itwoc.c    **** 											temp &= 0x000000FF;*/
 652:../itwoc.c    **** 			send = temp >> 8;
 653:../itwoc.c    **** 			data2.Payload = send;
 654:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 655:../itwoc.c    **** 		}
 656:../itwoc.c    **** 
 657:../itwoc.c    **** 		else if (Command == READ_FADERATE)
 1502              		.loc 1 657 0
 1503 00e4 8C28     		cmp	r0, #140
 1504 00e6 0AD1     		bne	.L106
 658:../itwoc.c    **** 		{
 659:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1505              		.loc 1 659 0
 1506 00e8 614F     		ldr	r7, .L130+16
 1507 00ea 0126     		mov	r6, #1
 660:../itwoc.c    **** 			temp = BCCUDIM01_GetDimDiv(&BCCUDIM01_Handle0);
 1508              		.loc 1 660 0
 1509 00ec 6848     		ldr	r0, .L130+48
 659:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1510              		.loc 1 659 0
 1511 00ee 7E70     		strb	r6, [r7, #1]
 1512              		.loc 1 660 0
 1513 00f0 FFF7FEFF 		bl	BCCUDIM01_GetDimDiv
 1514              	.LVL82:
 661:../itwoc.c    **** 			temp &= 0x00003FF;
 1515              		.loc 1 661 0
 1516 00f4 8305     		lsl	r3, r0, #22
 1517 00f6 980D     		lsr	r0, r3, #22
 1518              	.LVL83:
 1519 00f8 2860     		str	r0, [r5]
 1520              	.LVL84:
 662:../itwoc.c    **** 
 663:../itwoc.c    **** 			send = temp;
 664:../itwoc.c    **** 			data2.Payload = send;
 1521              		.loc 1 664 0
 1522 00fa 3870     		strb	r0, [r7]
 1523 00fc 0BE0     		b	.L127
 1524              	.LVL85:
 1525              	.L106:
 665:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 666:../itwoc.c    **** 
 667:../itwoc.c    **** 			send = temp >> 8;
 668:../itwoc.c    **** 			data2.Payload = send;
 669:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 670:../itwoc.c    **** 		}
 671:../itwoc.c    **** 
 672:../itwoc.c    **** 		else if (Command == READ_OFFTIME_RED)
 1526              		.loc 1 672 0
 1527 00fe 8728     		cmp	r0, #135
 1528 0100 10D1     		bne	.L107
 673:../itwoc.c    **** 		{
 674:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 675:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1529              		.loc 1 675 0
 1530 0102 5B4F     		ldr	r7, .L130+16
 1531 0104 0123     		mov	r3, #1
 676:../itwoc.c    **** 			temp = PWMSP003_Handle0.CC4yRegsPtr->CRS;
 1532              		.loc 1 676 0
 1533 0106 6349     		ldr	r1, .L130+52
 1534              	.LVL86:
 675:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1535              		.loc 1 675 0
 1536 0108 7B70     		strb	r3, [r7, #1]
 1537              	.L129:
 1538              		.loc 1 676 0
 1539 010a C869     		ldr	r0, [r1, #28]
 1540 010c C26B     		ldr	r2, [r0, #60]
 1541              	.LVL87:
 677:../itwoc.c    **** 			temp &= 0x00003FF;
 1542              		.loc 1 677 0
 1543 010e 9105     		lsl	r1, r2, #22
 1544 0110 8E0D     		lsr	r6, r1, #22
 1545              	.LVL88:
 1546              	.L128:
 1547 0112 2E60     		str	r6, [r5]
 1548              	.LVL89:
 678:../itwoc.c    **** 
 679:../itwoc.c    **** 			send = temp;
 680:../itwoc.c    **** 			data2.Payload = send;
 1549              		.loc 1 680 0
 1550 0114 3E70     		strb	r6, [r7]
 1551              	.LVL90:
 1552              	.L127:
 681:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1553              		.loc 1 681 0
 1554 0116 201C     		mov	r0, r4
 1555 0118 391C     		mov	r1, r7
 1556 011a FFF7FEFF 		bl	I2C003_WriteData
 1557              	.LVL91:
 682:../itwoc.c    **** 
 683:../itwoc.c    **** 			send = temp >> 8;
 1558              		.loc 1 683 0
 1559 011e 2D68     		ldr	r5, [r5]
 1560 0120 2D0A     		lsr	r5, r5, #8
 1561 0122 4DE0     		b	.L126
 1562              	.LVL92:
 1563              	.L107:
 684:../itwoc.c    **** 			data2.Payload = send;
 685:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 686:../itwoc.c    **** 		}
 687:../itwoc.c    **** 
 688:../itwoc.c    **** 		else if (Command == READ_OFFTIME_GREEN)
 1564              		.loc 1 688 0
 1565 0124 8828     		cmp	r0, #136
 1566 0126 04D1     		bne	.L108
 689:../itwoc.c    **** 		{
 690:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 691:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1567              		.loc 1 691 0
 1568 0128 514F     		ldr	r7, .L130+16
 1569 012a 0126     		mov	r6, #1
 1570 012c 7E70     		strb	r6, [r7, #1]
 692:../itwoc.c    **** 			temp = PWMSP003_Handle1.CC4yRegsPtr->CRS;
 1571              		.loc 1 692 0
 1572 012e 5A49     		ldr	r1, .L130+56
 1573              	.LVL93:
 1574 0130 EBE7     		b	.L129
 1575              	.LVL94:
 1576              	.L108:
 693:../itwoc.c    **** 			temp &= 0x00003FF;
 694:../itwoc.c    **** 
 695:../itwoc.c    **** 			send = temp;
 696:../itwoc.c    **** 			data2.Payload = send;
 697:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 698:../itwoc.c    **** 
 699:../itwoc.c    **** 			send = temp >> 8;
 700:../itwoc.c    **** 			data2.Payload = send;
 701:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 702:../itwoc.c    **** 		}
 703:../itwoc.c    **** 		else if (Command == READ_OFFTIME_BLUE)
 1577              		.loc 1 703 0
 1578 0132 8928     		cmp	r0, #137
 1579 0134 04D1     		bne	.L109
 704:../itwoc.c    **** 		{
 705:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 706:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1580              		.loc 1 706 0
 1581 0136 4E4F     		ldr	r7, .L130+16
 1582 0138 0122     		mov	r2, #1
 1583 013a 7A70     		strb	r2, [r7, #1]
 707:../itwoc.c    **** 			temp = PWMSP003_Handle2.CC4yRegsPtr->CRS;
 1584              		.loc 1 707 0
 1585 013c 5749     		ldr	r1, .L130+60
 1586              	.LVL95:
 1587 013e E4E7     		b	.L129
 1588              	.LVL96:
 1589              	.L109:
 708:../itwoc.c    **** 			temp &= 0x00003FF;
 709:../itwoc.c    **** 
 710:../itwoc.c    **** 			send = temp;
 711:../itwoc.c    **** 			data2.Payload = send;
 712:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 713:../itwoc.c    **** 
 714:../itwoc.c    **** 			send = temp >> 8;
 715:../itwoc.c    **** 			data2.Payload = send;
 716:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 717:../itwoc.c    **** 		}
 718:../itwoc.c    **** 
 719:../itwoc.c    **** 		else if (Command == READ_DMX)
 1590              		.loc 1 719 0
 1591 0140 8D28     		cmp	r0, #141
 1592 0142 05D1     		bne	.L110
 720:../itwoc.c    **** 		{
 721:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 722:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1593              		.loc 1 722 0
 1594 0144 4A4F     		ldr	r7, .L130+16
 723:../itwoc.c    **** 			temp = DMXControl;
 1595              		.loc 1 723 0
 1596 0146 5648     		ldr	r0, .L130+64
 722:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1597              		.loc 1 722 0
 1598 0148 0123     		mov	r3, #1
 1599 014a 7B70     		strb	r3, [r7, #1]
 1600              		.loc 1 723 0
 1601 014c 0668     		ldr	r6, [r0]
 1602 014e E0E7     		b	.L128
 1603              	.L110:
 724:../itwoc.c    **** 
 725:../itwoc.c    **** 			send = temp;
 726:../itwoc.c    **** 			data2.Payload = send;
 727:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 728:../itwoc.c    **** 
 729:../itwoc.c    **** 			send = temp >> 8;
 730:../itwoc.c    **** 			data2.Payload = send;
 731:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 732:../itwoc.c    **** 		}
 733:../itwoc.c    **** 
 734:../itwoc.c    **** 		else if (Command == READ_DMXSLOT)
 1604              		.loc 1 734 0
 1605 0150 8E28     		cmp	r0, #142
 1606 0152 05D1     		bne	.L111
 735:../itwoc.c    **** 		{
 736:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 737:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1607              		.loc 1 737 0
 1608 0154 464F     		ldr	r7, .L130+16
 738:../itwoc.c    **** 			temp = startingSlot;
 1609              		.loc 1 738 0
 1610 0156 5349     		ldr	r1, .L130+68
 1611              	.LVL97:
 737:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1612              		.loc 1 737 0
 1613 0158 0122     		mov	r2, #1
 1614 015a 7A70     		strb	r2, [r7, #1]
 1615              		.loc 1 738 0
 1616 015c 0E88     		ldrh	r6, [r1]
 1617 015e D8E7     		b	.L128
 1618              	.LVL98:
 1619              	.L111:
 739:../itwoc.c    **** 
 740:../itwoc.c    **** 			send = temp;
 741:../itwoc.c    **** 			data2.Payload = send;
 742:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 743:../itwoc.c    **** 
 744:../itwoc.c    **** 			send = temp >> 8;
 745:../itwoc.c    **** 			data2.Payload = send;
 746:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 747:../itwoc.c    **** 		}
 748:../itwoc.c    **** 
 749:../itwoc.c    **** 		else if (Command == READ_DMXBIT)
 1620              		.loc 1 749 0
 1621 0160 8F28     		cmp	r0, #143
 1622 0162 11D1     		bne	.L112
 750:../itwoc.c    **** 		{
 751:../itwoc.c    **** 			//temp = RD_REG_SIZE(BCCUCH01_Handle0.BCCU_CH->CHCONFIG, BCCU_CH_CHCONFIG_LINPRES_Msk,BCCU_CH_CH
 752:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 753:../itwoc.c    **** 			if (DMX_8 == 1)
 1623              		.loc 1 753 0
 1624 0164 5048     		ldr	r0, .L130+72
 752:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1625              		.loc 1 752 0
 1626 0166 424F     		ldr	r7, .L130+16
 1627              		.loc 1 753 0
 1628 0168 0268     		ldr	r2, [r0]
 752:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1629              		.loc 1 752 0
 1630 016a 0123     		mov	r3, #1
 1631 016c 7B70     		strb	r3, [r7, #1]
 1632              		.loc 1 753 0
 1633 016e 012A     		cmp	r2, #1
 1634 0170 01D1     		bne	.L113
 754:../itwoc.c    **** 				temp = 8;
 1635              		.loc 1 754 0
 1636 0172 0823     		mov	r3, #8
 1637 0174 04E0     		b	.L121
 1638              	.L113:
 755:../itwoc.c    **** 			else if (DMX_16 == 1)
 1639              		.loc 1 755 0
 1640 0176 4D49     		ldr	r1, .L130+76
 1641              	.LVL99:
 1642 0178 0E68     		ldr	r6, [r1]
 1643 017a 012E     		cmp	r6, #1
 1644 017c 01D1     		bne	.L114
 756:../itwoc.c    **** 				temp = 16;
 1645              		.loc 1 756 0
 1646 017e 1023     		mov	r3, #16
 1647              	.LVL100:
 1648              	.L121:
 1649 0180 2B60     		str	r3, [r5]
 1650              	.L114:
 1651              	.LVL101:
 757:../itwoc.c    **** 
 758:../itwoc.c    **** 			send = temp;
 759:../itwoc.c    **** 			data2.Payload = send;
 1652              		.loc 1 759 0
 1653 0182 2868     		ldr	r0, [r5]
 1654 0184 3870     		strb	r0, [r7]
 1655 0186 C6E7     		b	.L127
 1656              	.LVL102:
 1657              	.L112:
 760:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 761:../itwoc.c    **** 
 762:../itwoc.c    **** 			send = temp >> 8;
 763:../itwoc.c    **** 			data2.Payload = send;
 764:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 765:../itwoc.c    **** 		}
 766:../itwoc.c    **** 
 767:../itwoc.c    **** 		else if (Command == DIRECTACCESS_READ)
 1658              		.loc 1 767 0
 1659 0188 9028     		cmp	r0, #144
 1660 018a 1DD1     		bne	.L115
 1661              	.LVL103:
 1662              	.LBB5:
 768:../itwoc.c    **** 		{
 769:../itwoc.c    **** 			uint32_t *access;
 770:../itwoc.c    **** 			access = registerAddress;
 771:../itwoc.c    **** 			temp = *access;
 1663              		.loc 1 771 0
 1664 018c 4849     		ldr	r1, .L130+80
 1665              	.LVL104:
 772:../itwoc.c    **** 
 773:../itwoc.c    **** 
 774:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1666              		.loc 1 774 0
 1667 018e 0120     		mov	r0, #1
 771:../itwoc.c    **** 			temp = *access;
 1668              		.loc 1 771 0
 1669 0190 0E68     		ldr	r6, [r1]
 1670 0192 3368     		ldr	r3, [r6]
 1671 0194 3B60     		str	r3, [r7]
 1672              	.LVL105:
 1673              		.loc 1 774 0
 1674 0196 364F     		ldr	r7, .L130+16
 1675 0198 7870     		strb	r0, [r7, #1]
 1676              	.LVL106:
 775:../itwoc.c    **** 
 776:../itwoc.c    **** 			send = (uint8_t) (temp);
 777:../itwoc.c    **** 			data2.Payload = send;
 778:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1677              		.loc 1 778 0
 1678 019a 391C     		mov	r1, r7
 1679              	.LVL107:
 1680 019c 201C     		mov	r0, r4
 777:../itwoc.c    **** 			data2.Payload = send;
 1681              		.loc 1 777 0
 1682 019e 3B70     		strb	r3, [r7]
 1683              		.loc 1 778 0
 1684 01a0 FFF7FEFF 		bl	I2C003_WriteData
 1685              	.LVL108:
 779:../itwoc.c    **** 
 780:../itwoc.c    **** 			send = temp >> 8;
 1686              		.loc 1 780 0
 1687 01a4 2A68     		ldr	r2, [r5]
 781:../itwoc.c    **** 			data2.Payload = send;
 782:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1688              		.loc 1 782 0
 1689 01a6 201C     		mov	r0, r4
 780:../itwoc.c    **** 			send = temp >> 8;
 1690              		.loc 1 780 0
 1691 01a8 110A     		lsr	r1, r2, #8
 781:../itwoc.c    **** 			data2.Payload = send;
 1692              		.loc 1 781 0
 1693 01aa 3970     		strb	r1, [r7]
 1694              		.loc 1 782 0
 1695 01ac 391C     		mov	r1, r7
 1696 01ae FFF7FEFF 		bl	I2C003_WriteData
 1697              	.LVL109:
 783:../itwoc.c    **** 
 784:../itwoc.c    **** 			send = temp >> 16;
 1698              		.loc 1 784 0
 1699 01b2 6E88     		ldrh	r6, [r5, #2]
 1700              	.LVL110:
 785:../itwoc.c    **** 			data2.Payload = send;
 786:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1701              		.loc 1 786 0
 1702 01b4 201C     		mov	r0, r4
 1703 01b6 391C     		mov	r1, r7
 785:../itwoc.c    **** 			data2.Payload = send;
 1704              		.loc 1 785 0
 1705 01b8 3E70     		strb	r6, [r7]
 1706              		.loc 1 786 0
 1707 01ba FFF7FEFF 		bl	I2C003_WriteData
 1708              	.LVL111:
 787:../itwoc.c    **** 
 788:../itwoc.c    **** 			send = temp >> 24;
 1709              		.loc 1 788 0
 1710 01be ED78     		ldrb	r5, [r5, #3]
 1711              	.LVL112:
 1712              	.L126:
 789:../itwoc.c    **** 			data2.Payload = send;
 1713              		.loc 1 789 0
 1714 01c0 3D70     		strb	r5, [r7]
 790:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1715              		.loc 1 790 0
 1716 01c2 201C     		mov	r0, r4
 1717 01c4 391C     		mov	r1, r7
 1718 01c6 44E0     		b	.L122
 1719              	.LVL113:
 1720              	.L115:
 1721              	.LBE5:
 791:../itwoc.c    **** 
 792:../itwoc.c    **** 
 793:../itwoc.c    **** 		}
 794:../itwoc.c    **** 
 795:../itwoc.c    **** 		else if (writeToFlash == 1)
 1722              		.loc 1 795 0
 1723 01c8 3A4E     		ldr	r6, .L130+84
 1724 01ca 3768     		ldr	r7, [r6]
 1725 01cc 012F     		cmp	r7, #1
 1726 01ce 32D1     		bne	.L116
 1727              	.LBB6:
 796:../itwoc.c    **** 		{
 797:../itwoc.c    **** 			flashBuffer[0] ++;
 1728              		.loc 1 797 0
 1729 01d0 394E     		ldr	r6, .L130+88
 1730 01d2 3068     		ldr	r0, [r6]
 1731 01d4 0130     		add	r0, r0, #1
 1732 01d6 3060     		str	r0, [r6]
 798:../itwoc.c    **** 
 799:../itwoc.c    **** 			status_t status;
 800:../itwoc.c    **** 			FLASH003_ClearStatus();
 1733              		.loc 1 800 0
 1734 01d8 FFF7FEFF 		bl	FLASH003_ClearStatus
 1735              	.LVL114:
 801:../itwoc.c    **** 			if ( ! (flashBuffer[0] % 2 ))
 1736              		.loc 1 801 0
 1737 01dc 3268     		ldr	r2, [r6]
 1738 01de 374D     		ldr	r5, .L130+92
 1739 01e0 3A42     		tst	r2, r7
 1740 01e2 07D1     		bne	.L117
 802:../itwoc.c    **** 			{
 803:../itwoc.c    **** 				flashAddress = 0x10008000;
 1741              		.loc 1 803 0
 1742 01e4 3649     		ldr	r1, .L130+96
 1743 01e6 2960     		str	r1, [r5]
 1744              	.L118:
 804:../itwoc.c    **** 				while ( FLASH003_ErasePage((unsigned long )flashAddress) != FLASH003_COMPLETE );
 1745              		.loc 1 804 0 discriminator 1
 1746 01e8 2868     		ldr	r0, [r5]
 1747 01ea FFF7FEFF 		bl	FLASH003_ErasePage
 1748              	.LVL115:
 1749 01ee 0028     		cmp	r0, #0
 1750 01f0 FAD1     		bne	.L118
 1751 01f2 01E0     		b	.L119
 1752              	.L117:
 805:../itwoc.c    **** 			}
 806:../itwoc.c    **** 
 807:../itwoc.c    **** 			else if (flashBuffer[0] %2)
 808:../itwoc.c    **** 				flashAddress = 0x10008080;
 1753              		.loc 1 808 0
 1754 01f4 334F     		ldr	r7, .L130+100
 1755 01f6 2F60     		str	r7, [r5]
 1756              	.L119:
 809:../itwoc.c    **** 
 810:../itwoc.c    **** 
 811:../itwoc.c    **** 			FLASH003_WriteMultipleBlocks(flashAddress, flashBuffer, 6U);
 1757              		.loc 1 811 0
 1758 01f8 311C     		mov	r1, r6
 1759 01fa 2868     		ldr	r0, [r5]
 1760 01fc 0622     		mov	r2, #6
 1761 01fe FFF7FEFF 		bl	FLASH003_WriteMultipleBlocks
 1762              	.LVL116:
 812:../itwoc.c    **** 			FLASH003_ReadBytes(flashAddress, flashBuffer, 92);
 1763              		.loc 1 812 0
 1764 0202 5C22     		mov	r2, #92
 1765 0204 311C     		mov	r1, r6
 1766 0206 2868     		ldr	r0, [r5]
 1767 0208 FFF7FEFF 		bl	FLASH003_ReadBytes
 1768              	.LVL117:
 813:../itwoc.c    **** 
 814:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1769              		.loc 1 814 0
 1770 020c 184D     		ldr	r5, .L130+16
 815:../itwoc.c    **** 
 816:../itwoc.c    **** 			send = 0x11;
 817:../itwoc.c    **** 			data2.Payload = send;
 1771              		.loc 1 817 0
 1772 020e 1123     		mov	r3, #17
 814:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1773              		.loc 1 814 0
 1774 0210 0126     		mov	r6, #1
 818:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1775              		.loc 1 818 0
 1776 0212 201C     		mov	r0, r4
 1777 0214 291C     		mov	r1, r5
 817:../itwoc.c    **** 			data2.Payload = send;
 1778              		.loc 1 817 0
 1779 0216 2B70     		strb	r3, [r5]
 814:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1780              		.loc 1 814 0
 1781 0218 6E70     		strb	r6, [r5, #1]
 1782              	.LVL118:
 1783              		.loc 1 818 0
 1784 021a FFF7FEFF 		bl	I2C003_WriteData
 1785              	.LVL119:
 819:../itwoc.c    **** 
 820:../itwoc.c    **** 			send = 0x12;
 821:../itwoc.c    **** 			data2.Payload = send;
 1786              		.loc 1 821 0
 1787 021e 1220     		mov	r0, #18
 1788 0220 2870     		strb	r0, [r5]
 822:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1789              		.loc 1 822 0
 1790 0222 291C     		mov	r1, r5
 1791 0224 201C     		mov	r0, r4
 1792 0226 FFF7FEFF 		bl	I2C003_WriteData
 1793              	.LVL120:
 823:../itwoc.c    **** 
 824:../itwoc.c    **** 			writeToFlash = 0;
 1794              		.loc 1 824 0
 1795 022a 224A     		ldr	r2, .L130+84
 825:../itwoc.c    **** 			configStatus = 1;
 1796              		.loc 1 825 0
 1797 022c 264F     		ldr	r7, .L130+104
 824:../itwoc.c    **** 			writeToFlash = 0;
 1798              		.loc 1 824 0
 1799 022e 0024     		mov	r4, #0
 1800 0230 1460     		str	r4, [r2]
 1801              		.loc 1 825 0
 1802 0232 3E60     		str	r6, [r7]
 1803 0234 0FE0     		b	.L97
 1804              	.LVL121:
 1805              	.L116:
 1806              	.LBE6:
 826:../itwoc.c    **** 		}
 827:../itwoc.c    **** 
 828:../itwoc.c    **** 		else if (Command == READ_CONFIG)
 1807              		.loc 1 828 0
 1808 0236 8028     		cmp	r0, #128
 1809 0238 0DD1     		bne	.L97
 829:../itwoc.c    **** 		{
 830:../itwoc.c    **** 
 831:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 832:../itwoc.c    **** 
 833:../itwoc.c    **** 			send = (uint8_t) (configStatus);
 1810              		.loc 1 833 0
 1811 023a 2349     		ldr	r1, .L130+104
 1812              	.LVL122:
 831:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1813              		.loc 1 831 0
 1814 023c 0C4D     		ldr	r5, .L130+16
 1815              		.loc 1 833 0
 1816 023e 0B68     		ldr	r3, [r1]
 831:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1817              		.loc 1 831 0
 1818 0240 0122     		mov	r2, #1
 834:../itwoc.c    **** 			data2.Payload = send;
 835:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1819              		.loc 1 835 0
 1820 0242 291C     		mov	r1, r5
 1821 0244 201C     		mov	r0, r4
 831:../itwoc.c    **** 			data2.TDF_Type = I2C003_TDF_STXDATA; // TDF_Ack0
 1822              		.loc 1 831 0
 1823 0246 6A70     		strb	r2, [r5, #1]
 1824              	.LVL123:
 834:../itwoc.c    **** 			data2.Payload = send;
 1825              		.loc 1 834 0
 1826 0248 2B70     		strb	r3, [r5]
 1827              		.loc 1 835 0
 1828 024a FFF7FEFF 		bl	I2C003_WriteData
 1829              	.LVL124:
 836:../itwoc.c    **** 
 837:../itwoc.c    **** 			I2C003_WriteData(&I2C003_Handle0,&data2);
 1830              		.loc 1 837 0
 1831 024e 201C     		mov	r0, r4
 1832 0250 291C     		mov	r1, r5
 1833              	.L122:
 1834 0252 FFF7FEFF 		bl	I2C003_WriteData
 1835              	.LVL125:
 1836              	.L97:
 838:../itwoc.c    **** 
 839:../itwoc.c    **** 			send = temp >> 16;
 840:../itwoc.c    **** 
 841:../itwoc.c    **** 		}
 842:../itwoc.c    **** 
 843:../itwoc.c    **** 
 844:../itwoc.c    **** 
 845:../itwoc.c    **** 
 846:../itwoc.c    **** 
 847:../itwoc.c    **** 
 848:../itwoc.c    **** 
 849:../itwoc.c    **** 	}
 850:../itwoc.c    **** 	byteCount = 0;
 1837              		.loc 1 850 0
 1838 0256 034C     		ldr	r4, .L130+4
 1839 0258 0026     		mov	r6, #0
 1840 025a 2660     		str	r6, [r4]
 851:../itwoc.c    **** 
 852:../itwoc.c    **** }
 1841              		.loc 1 852 0
 1842              		@ sp needed for prologue
 1843 025c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1844              	.L131:
 1845 025e C046     		.align	2
 1846              	.L130:
 1847 0260 00000000 		.word	I2C003_Handle0
 1848 0264 00000000 		.word	byteCount
 1849 0268 00000000 		.word	temp
 1850 026c 00000000 		.word	Command
 1851 0270 00000000 		.word	data2
 1852 0274 00000000 		.word	BCCUCH01_Handle0
 1853 0278 00000000 		.word	BCCUCH01_Handle1
 1854 027c 00000000 		.word	BCCUCH01_Handle2
 1855 0280 00000000 		.word	BCCUCH01_Handle3
 1856 0284 00000000 		.word	BCCUCH01_Handle4
 1857 0288 00000000 		.word	BCCUCH01_Handle5
 1858 028c 00000000 		.word	Lamphandle
 1859 0290 00000000 		.word	BCCUDIM01_Handle0
 1860 0294 00000000 		.word	PWMSP003_Handle0
 1861 0298 00000000 		.word	PWMSP003_Handle1
 1862 029c 00000000 		.word	PWMSP003_Handle2
 1863 02a0 00000000 		.word	DMXControl
 1864 02a4 00000000 		.word	startingSlot
 1865 02a8 00000000 		.word	DMX_8
 1866 02ac 00000000 		.word	DMX_16
 1867 02b0 00000000 		.word	registerAddress
 1868 02b4 00000000 		.word	writeToFlash
 1869 02b8 00000000 		.word	flashBuffer
 1870 02bc 00000000 		.word	flashAddress
 1871 02c0 00800010 		.word	268468224
 1872 02c4 80800010 		.word	268468352
 1873 02c8 00000000 		.word	configStatus
 1874              		.cfi_endproc
 1875              	.LFE39:
 1877              		.comm	data5,2,1
 1878              		.comm	data4,2,1
 1879              		.comm	data3,2,1
 1880              		.comm	data2,2,1
 1881              		.comm	data1,2,1
 1882              		.text
 1883              	.Letext0:
 1884              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1885              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC1200_series/Include/XMC1200.h"
 1886              		.file 4 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVES
 1887              		.file 5 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVES
 1888              		.file 6 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVES
 1889              		.file 7 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVES
 1890              		.file 8 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVES
 1891              		.file 9 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVES
 1892              		.file 10 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1893              		.file 11 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1894              		.file 12 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1895              		.file 13 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1896              		.file 14 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1897              		.file 15 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1898              		.file 16 "C:\\DAVE3_workspace\\first\\RGB_LED_Shield_XMC1200_tmp_flash\\Dave\\Generated\\inc\\DAVE
 1899              		.file 17 "../itwoc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 itwoc.c
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:18     .text.USIC0_1_IRQHandler:00000000 $t
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:23     .text.USIC0_1_IRQHandler:00000000 USIC0_1_IRQHandler
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:635    .text.USIC0_1_IRQHandler:00000318 $d
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:656    .text.USIC0_1_IRQHandler:00000364 $t
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:1258   .text.USIC0_1_IRQHandler:0000063c $d
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:1286   .text.USIC0_2_IRQHandler:00000000 $t
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:1291   .text.USIC0_2_IRQHandler:00000000 USIC0_2_IRQHandler
C:\Users\ChiaJiaY\AppData\Local\Temp\ccgOg4lM.s:1847   .text.USIC0_2_IRQHandler:00000260 $d
                            *COM*:00000002 data2
                            *COM*:00000002 data5
                            *COM*:00000002 data4
                            *COM*:00000002 data3
                            *COM*:00000002 data1
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e09b9dd5224853206c418479f14d6963
                           .group:00000000 wm4.XMC1200.h.45.4c899b4822ac22c0f00d6fd7f173cc96
                           .group:00000000 wm4.core_cm0.h.47.022e66414e77714da7c4b30b3ad99fe8
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.b7b6650bdd2316848d940915272d75b8
                           .group:00000000 wm4.core_cm0.h.135.ca70469f87e143609670bb393bfa6518
                           .group:00000000 wm4.XMC1000_RomFunctionTable.h.31.6d9a94465618f31b040dc9cea9a47ad7
                           .group:00000000 wm4.XMC1200.h.122.96b58b1204def4c9f76341a4e21abaf6
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.383e3edbb9cbf6e538f7c1532ef623c1
                           .group:00000000 wm4.uc_id.h.35.62dcba5f6261c1436e3866a751c1a98b
                           .group:00000000 wm4.BCCUDIM01_Conf.h.46.1e3ffd6581cbd401bcc28a6ce60f19f0
                           .group:00000000 wm4.BCCUCH01_Conf.h.48.2ce679450068d1645a9e0c3a7937e697
                           .group:00000000 wm4.CCU4Global_Conf.h.63.a52fac0daa39b5f58343578312b4eb54
                           .group:00000000 wm4.PWMSP003_Conf.h.49.a3ea83c25b3af429e78acb0f2dc45bd4
                           .group:00000000 wm4.PWMSP003.h.103.903071678b9af5683776405c5b299fbb
                           .group:00000000 wm4.IO002_Conf.h.51.9fc2eb43e77e0a2c02912a3744f3ec9d
                           .group:00000000 wm4.IO001.h.49.4efcabb368feaef60c65bd7504b48505
                           .group:00000000 wm4.NVIC002_Conf.h.62.64042456dc7f2eb96fc713abacb4c5d4
                           .group:00000000 wm4.DMX512RD01_Conf.h.49.036b57ce74a404ea8f8ade310b364436
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.Usic.h.40.f6a4fed014760114cf5039d398d6dd2c
                           .group:00000000 wm4.I2C003_Conf.h.50.5fb7c255d386301836868ba2fd78b91f
                           .group:00000000 wm4.FLASH003.h.76.20bf3d34b222314a45adfdfb414ab1b6
                           .group:00000000 wm4.FLASH003_Conf.h.72.6d366060eda228c6c8843c467361c30c

UNDEFINED SYMBOLS
I2C003_ClearFlag
I2C003_ReadData
BCCUCH01_AbortLinearWalk
BCCUCH01_SetIntensity
BCCUCH01_StartLinearWalk
PWMSP003_UpdateCompare
I2C003_Handle0
byteCount
Command
DataUpper
DataLower
DMXControl
flashBuffer
writeToFlash
DataTotal
BCCUCH01_Handle0
BCCUCH01_Handle1
BCCUCH01_Handle2
Lamphandle
BCCUCH01_Handle3
BCCUCH01_Handle4
BCCUCH01_Handle5
changeAddress
PWMSP003_Handle0
PWMSP003_Handle1
BCCUCH01_SetLinearWalkPrescaler
GET_CHANNEL_DIM_MASK
BCCUDIM01_AbortDimming
BCCUDIM01_SetDimLvl
BCCUDIM01_StartDimming
BCCUDIM01_SetDimDiv
COLORLAMP01_SetColor
PWMSP003_Handle2
BCCUDIM01_Handle0
registerAddress
startingSlot
DMX_8
DMX_16
dmx_RedH
dmx_RedL
COLORLAMP01_ConfigHandle0
DataDirect
dmx_BlueH
dmx_GreenH
dmx_GreenL
dmx_BlueL
BCCUCH01_GetIntensity
I2C003_WriteData
BCCUDIM01_GetDimLvl
BCCUDIM01_GetDimDiv
FLASH003_ClearStatus
FLASH003_ErasePage
FLASH003_WriteMultipleBlocks
FLASH003_ReadBytes
temp
flashAddress
configStatus
