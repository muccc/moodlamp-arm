   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"NVIC002.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC002_Init,"ax",%progbits
  18              		.align	1
  19              		.global	NVIC002_Init
  20              		.code	16
  21              		.thumb_func
  23              	NVIC002_Init:
  24              	.LFB38:
  25              		.file 1 "../Dave/Generated/src/NVIC002/NVIC002.c"
   1:../Dave/Generated/src/NVIC002/NVIC002.c **** /*CODE_BLOCK_BEGIN[NVIC002.c]*/
   2:../Dave/Generated/src/NVIC002/NVIC002.c **** 
   3:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
   4:../Dave/Generated/src/NVIC002/NVIC002.c ****  Copyright (c) 2014, Infineon Technologies AG                                 **
   5:../Dave/Generated/src/NVIC002/NVIC002.c ****  All rights reserved.                                                         **
   6:../Dave/Generated/src/NVIC002/NVIC002.c ****                                                                               **
   7:../Dave/Generated/src/NVIC002/NVIC002.c ****  Redistribution and use in source and binary forms, with or without           **
   8:../Dave/Generated/src/NVIC002/NVIC002.c ****  modification,are permitted provided that the following conditions are met:   **
   9:../Dave/Generated/src/NVIC002/NVIC002.c ****                                                                               **
  10:../Dave/Generated/src/NVIC002/NVIC002.c ****  *Redistributions of source code must retain the above copyright notice,      **
  11:../Dave/Generated/src/NVIC002/NVIC002.c ****  this list of conditions and the following disclaimer.                        **
  12:../Dave/Generated/src/NVIC002/NVIC002.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  13:../Dave/Generated/src/NVIC002/NVIC002.c ****  this list of conditions and the following disclaimer in the documentation    **
  14:../Dave/Generated/src/NVIC002/NVIC002.c ****  and/or other materials provided with the distribution.                       **
  15:../Dave/Generated/src/NVIC002/NVIC002.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  16:../Dave/Generated/src/NVIC002/NVIC002.c ****  may be used to endorse or promote products derived from this software without** 
  17:../Dave/Generated/src/NVIC002/NVIC002.c ****  specific prior written permission.                                           **
  18:../Dave/Generated/src/NVIC002/NVIC002.c ****                                                                               **
  19:../Dave/Generated/src/NVIC002/NVIC002.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  20:../Dave/Generated/src/NVIC002/NVIC002.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  21:../Dave/Generated/src/NVIC002/NVIC002.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  22:../Dave/Generated/src/NVIC002/NVIC002.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  23:../Dave/Generated/src/NVIC002/NVIC002.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  24:../Dave/Generated/src/NVIC002/NVIC002.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  25:../Dave/Generated/src/NVIC002/NVIC002.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  26:../Dave/Generated/src/NVIC002/NVIC002.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  27:../Dave/Generated/src/NVIC002/NVIC002.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  28:../Dave/Generated/src/NVIC002/NVIC002.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  29:../Dave/Generated/src/NVIC002/NVIC002.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  30:../Dave/Generated/src/NVIC002/NVIC002.c ****                                                                               **
  31:../Dave/Generated/src/NVIC002/NVIC002.c ****  To improve the quality of the software, users are encouraged to share        **
  32:../Dave/Generated/src/NVIC002/NVIC002.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  33:../Dave/Generated/src/NVIC002/NVIC002.c ****  dave@infineon.com).                                                          **
  34:../Dave/Generated/src/NVIC002/NVIC002.c ****                                                                               **
  35:../Dave/Generated/src/NVIC002/NVIC002.c **** ********************************************************************************
  36:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  37:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  38:../Dave/Generated/src/NVIC002/NVIC002.c **** ** PLATFORM : Infineon XMC4000/XMC1000 Series   			                  **
  39:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  40:../Dave/Generated/src/NVIC002/NVIC002.c **** ** COMPILER : Compiler Independent                                            **
  41:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  42:../Dave/Generated/src/NVIC002/NVIC002.c **** ** AUTHOR   : App Developer                                                   **
  43:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  44:../Dave/Generated/src/NVIC002/NVIC002.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  45:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  46:../Dave/Generated/src/NVIC002/NVIC002.c **** ** MODIFICATION DATE : Feb 24, 2014                                           **
  47:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  48:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
  49:../Dave/Generated/src/NVIC002/NVIC002.c **** /**
  50:../Dave/Generated/src/NVIC002/NVIC002.c ****  * @file   NVIC002.c
  51:../Dave/Generated/src/NVIC002/NVIC002.c ****  *
  52:../Dave/Generated/src/NVIC002/NVIC002.c ****  * @brief  NVIC_Empty_Handler_NVIC002 App
  53:../Dave/Generated/src/NVIC002/NVIC002.c ****  *         
  54:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  NVIC002 App is used by top level Apps when a user defined interrupt handler 
  55:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  needs to be reassigned to the actual mapped interrupt node
  56:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	(based on App connectivity).
  57:../Dave/Generated/src/NVIC002/NVIC002.c ****  *
  58:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	The use case is as follows: 
  59:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	Interrupt handler has to be provided by the user and function name is defined
  60:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  by user in the App GUI. 
  61:../Dave/Generated/src/NVIC002/NVIC002.c ****  *
  62:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	NVIC002 App creates a header file (NVIC002.h) with a #define to reassign the
  63:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  interrupt function name defined by the user to the fixed name based on the
  64:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	node number.
  65:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	Note: 
  66:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	Preemption priority for NVIC  interrupt is fixed to 64.
  67:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	The App GUI provides lowest priority level as default value.      
  68:../Dave/Generated/src/NVIC002/NVIC002.c ****  *	It is also possible for top level App to be self-contained(by consuming NVIC
  69:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  node directly instead of requiring an NVIC App for defining the interrupt
  70:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  handler.)
  71:../Dave/Generated/src/NVIC002/NVIC002.c ****  *
  72:../Dave/Generated/src/NVIC002/NVIC002.c ****  */
  73:../Dave/Generated/src/NVIC002/NVIC002.c **** 
  74:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
  75:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Author(s) Identity                                    **
  76:../Dave/Generated/src/NVIC002/NVIC002.c **** ********************************************************************************
  77:../Dave/Generated/src/NVIC002/NVIC002.c **** **                                                                            **
  78:../Dave/Generated/src/NVIC002/NVIC002.c **** ** Initials     Name                                                          **
  79:../Dave/Generated/src/NVIC002/NVIC002.c **** ** ---------------------------------------------------------------------------**
  80:../Dave/Generated/src/NVIC002/NVIC002.c **** ** SNR      App Developer                                                     **
  81:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
  82:../Dave/Generated/src/NVIC002/NVIC002.c **** /* Revision History	
  83:../Dave/Generated/src/NVIC002/NVIC002.c ****  * 18-Feb-13 V1.0.12  1. Porting to XMC1000 Devices.
  84:../Dave/Generated/src/NVIC002/NVIC002.c ****  *                    2. Conditional Codes are added to support both XMC1000 
  85:../Dave/Generated/src/NVIC002/NVIC002.c ****  *                    and XMC4000 devices.
  86:../Dave/Generated/src/NVIC002/NVIC002.c ****  *                    3. Debug related dummy Macros are added. 
  87:../Dave/Generated/src/NVIC002/NVIC002.c ****  * 25-Mar-13 V1.0.14  1. Interrupt mapping bug fixing. 
  88:../Dave/Generated/src/NVIC002/NVIC002.c ****  *                    2. Removed Array of irq_numbers.
  89:../Dave/Generated/src/NVIC002/NVIC002.c ****  * 28-Nov-13 v1.0.20  Updated as per the coding guidelines        
  90:../Dave/Generated/src/NVIC002/NVIC002.c ****  * 24-Feb-14 v1.0.24  Removed dummy debug macros             
  91:../Dave/Generated/src/NVIC002/NVIC002.c ****  */
  92:../Dave/Generated/src/NVIC002/NVIC002.c **** 
  93:../Dave/Generated/src/NVIC002/NVIC002.c **** 
  94:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
  95:../Dave/Generated/src/NVIC002/NVIC002.c ****  ** INCLUDE FILES                                                             **
  96:../Dave/Generated/src/NVIC002/NVIC002.c ****  ******************************************************************************/
  97:../Dave/Generated/src/NVIC002/NVIC002.c **** /* Inclusion of header file */
  98:../Dave/Generated/src/NVIC002/NVIC002.c **** #include "../../inc/NVIC002/NVIC002.h"
  99:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 100:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 101:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 102:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Private Macro Definitions                             **
 103:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 104:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 105:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 106:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 107:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Private Type Definitions                              **
 108:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 109:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 110:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 111:../Dave/Generated/src/NVIC002/NVIC002.c **** **                 Private Function Declarations:
 112:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 113:../Dave/Generated/src/NVIC002/NVIC002.c **** static void NVIC002_lInit(const NVIC002_HandleType * Handle);
 114:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 115:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 116:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Global Constant Definitions                           **
 117:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 118:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 119:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 120:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Global Variable Definitions                           **
 121:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 122:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 123:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 124:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Private Constant Definitions                          **
 125:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 126:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 127:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 128:../Dave/Generated/src/NVIC002/NVIC002.c **** **                 Function like macro definitions                            **
 129:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 130:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 131:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Private Function Definitions                          **
 132:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 133:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 134:../Dave/Generated/src/NVIC002/NVIC002.c **** /*******************************************************************************
 135:../Dave/Generated/src/NVIC002/NVIC002.c **** **                      Public Function Definitions                           **
 136:../Dave/Generated/src/NVIC002/NVIC002.c **** *******************************************************************************/
 137:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 138:../Dave/Generated/src/NVIC002/NVIC002.c **** /**  Function to initialize the NVIC node parameters based on 
 139:../Dave/Generated/src/NVIC002/NVIC002.c ****  *  UI configuration.
 140:../Dave/Generated/src/NVIC002/NVIC002.c ****  */
 141:../Dave/Generated/src/NVIC002/NVIC002.c **** void NVIC002_Init(void)
 142:../Dave/Generated/src/NVIC002/NVIC002.c **** {
  26              		.loc 1 142 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 32
  32              		.cfi_offset 0, -32
  33              		.cfi_offset 1, -28
  34              		.cfi_offset 2, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 142 0
  41 0002 0023     		mov	r3, #0
  42              	.LVL1:
  43              	.L5:
 143:../Dave/Generated/src/NVIC002/NVIC002.c ****   uint32_t Count;
 144:../Dave/Generated/src/NVIC002/NVIC002.c ****   for (Count = 0U; Count<(uint32_t)NVIC002_NUM_INSTANCES; Count++)
 145:../Dave/Generated/src/NVIC002/NVIC002.c ****   {
 146:../Dave/Generated/src/NVIC002/NVIC002.c **** 	  NVIC002_lInit(NVIC002_HandleArray[Count]);
  44              		.loc 1 146 0 discriminator 2
  45 0004 1E4A     		ldr	r2, .L8
  46 0006 D258     		ldr	r2, [r2, r3]
  47              	.LVL2:
  48              	.LBB12:
  49              	.LBB13:
 147:../Dave/Generated/src/NVIC002/NVIC002.c ****   }
 148:../Dave/Generated/src/NVIC002/NVIC002.c **** }
 149:../Dave/Generated/src/NVIC002/NVIC002.c **** 
 150:../Dave/Generated/src/NVIC002/NVIC002.c **** static void NVIC002_lInit(const NVIC002_HandleType * Handle)
 151:../Dave/Generated/src/NVIC002/NVIC002.c **** {
 152:../Dave/Generated/src/NVIC002/NVIC002.c ****    /* Set Interrupt Priority for NVIC <%=NodeID%> 
 153:../Dave/Generated/src/NVIC002/NVIC002.c ****       Node App Instance <%=appInst%>  */
 154:../Dave/Generated/src/NVIC002/NVIC002.c **** 	#if (UC_FAMILY == XMC1) 
 155:../Dave/Generated/src/NVIC002/NVIC002.c **** 	   NVIC_SetPriority((IRQn_Type)Handle->NodeID, 
  50              		.loc 1 155 0 discriminator 2
  51 0008 1178     		ldrb	r1, [r2]
  52 000a 5678     		ldrb	r6, [r2, #1]
  53              	.LVL3:
  54              	.LBB14:
  55              	.LBB15:
  56              		.file 2 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm0.h"
   1:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @version  V3.20
   5:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @date     25. February 2013
   6:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *
   7:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  * @note
   8:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *
   9:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  10:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* Copyright (c) 2009 - 2013 ARM LIMITED
  11:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  12:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    All rights reserved.
  13:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    - Redistributions of source code must retain the above copyright
  16:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      documentation and/or other materials provided with the distribution.
  20:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      to endorse or promote products derived from this software without
  22:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      specific prior written permission.
  23:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    *
  24:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    ---------------------------------------------------------------------------*/
  36:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  37:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  38:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if defined ( __ICCARM__ )
  39:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
  41:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  42:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  43:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  extern "C" {
  44:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
  45:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  46:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  47:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  48:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  49:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  52:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  54:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  55:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  57:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  58:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  60:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
  61:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  62:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  63:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*******************************************************************************
  64:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  65:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  66:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup Cortex_M0
  67:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
  68:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
  69:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  70:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  71:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x03)                                   /*!< [31:16] CMSIS HAL m
  72:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x20)                                   /*!< [15:0]  CMSIS HAL s
  73:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16) | \
  74:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  76:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0x00)                                   /*!< Cortex-M Core      
  77:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  78:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  79:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if   defined ( __CC_ARM )
  80:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static __inline
  83:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  84:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  85:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  86:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  87:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  88:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  89:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  90:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  91:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  92:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  93:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  94:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
  95:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  96:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  97:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  98:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
  99:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 100:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 101:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not. This core does not support an FPU at all
 102:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 103:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __FPU_USED       0
 104:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 105:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
 106:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
 107:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 108:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 109:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 110:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
 111:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
 112:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 113:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 114:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 115:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
 116:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 117:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 119:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 120:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 121:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 122:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 123:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 124:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 125:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 126:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #include <stdint.h>                      /* standard types definitions                      */
 127:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 128:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 129:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 130:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 131:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 132:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 133:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 134:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 135:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 136:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 137:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 138:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 139:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 140:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000
 141:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 142:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 143:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 144:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 145:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2
 146:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 147:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 148:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 149:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 150:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0
 151:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 152:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #endif
 153:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 154:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 155:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 156:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /**
 157:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 158:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 159:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 160:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 161:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 162:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 163:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 164:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 165:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #else
 166:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 167:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 168:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 169:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 170:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 171:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 172:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 173:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 174:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 175:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*******************************************************************************
 176:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 177:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   Core Register contain:
 178:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core Register
 179:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 180:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core SCB Register
 181:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 182:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 183:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 184:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 185:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 186:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 187:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup    CMSIS_core_register
 188:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 189:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief  Core Register type definitions.
 190:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 191:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 192:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 193:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 194:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 195:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 196:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 197:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 198:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 199:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if (__CORTEX_M != 0x04)
 200:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 201:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #else
 202:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 203:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 204:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 205:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 206:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 207:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 208:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 209:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 210:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 211:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 212:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 213:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } APSR_Type;
 214:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 215:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 216:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 217:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 218:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 219:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 220:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 221:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 222:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 223:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 224:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 225:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 226:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } IPSR_Type;
 227:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 228:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 229:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 230:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 231:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 232:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 233:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 234:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 235:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 236:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #if (__CORTEX_M != 0x04)
 237:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 238:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #else
 239:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 240:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 241:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 242:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #endif
 243:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 244:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 245:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 246:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 247:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 248:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 249:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 250:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 251:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 252:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } xPSR_Type;
 253:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 254:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 255:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 256:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 257:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef union
 258:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 259:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   struct
 260:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   {
 261:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 262:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 263:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 264:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 265:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access                  */
 266:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 267:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 268:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 269:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 270:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 271:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 272:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup    CMSIS_core_register
 273:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 274:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Type definitions for the NVIC Registers
 275:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 276:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 277:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 278:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 279:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 280:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef struct
 281:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 282:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ISER[1];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 283:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED0[31];
 284:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ICER[1];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 285:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RSERVED1[31];
 286:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ISPR[1];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 287:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED2[31];
 288:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ICPR[1];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 289:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED3[31];
 290:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED4[64];
 291:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t IP[8];                   /*!< Offset: 0x300 (R/W)  Interrupt Priority Register     
 292:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 293:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 294:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 295:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 296:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 297:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_core_register
 298:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 299:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Type definitions for the System Control Block Registers
 300:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 301:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 302:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 303:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Structure type to access the System Control Block (SCB).
 304:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 305:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef struct
 306:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 307:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 308:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 309:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED0;
 310:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 311:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 312:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 313:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****        uint32_t RESERVED1;
 314:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t SHP[2];                  /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 315:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 316:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } SCB_Type;
 317:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 318:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 319:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 320:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 321:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 322:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 323:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 324:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 325:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 326:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 327:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 328:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 329:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 330:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 331:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 332:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 333:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 334:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 335:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 336:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 337:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 338:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 339:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 340:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 341:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 342:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 343:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 344:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 345:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 346:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 347:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 348:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 349:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 350:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 351:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 352:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 353:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 354:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 355:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 356:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 357:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 358:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 359:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 360:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 361:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 362:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 363:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 364:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 365:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 366:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 367:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 368:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 369:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 370:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 371:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 372:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 373:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 374:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 375:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 376:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 377:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 378:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 379:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 380:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 381:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 382:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 383:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 384:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 385:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 386:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 387:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 388:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 389:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 390:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 391:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 392:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 393:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 394:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 395:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 396:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 397:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 398:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 399:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 400:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 401:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 402:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_core_register
 403:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 404:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Type definitions for the System Timer Registers.
 405:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 406:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 407:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 408:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Structure type to access the System Timer (SysTick).
 409:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 410:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** typedef struct
 411:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 412:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 413:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 414:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 415:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 416:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** } SysTick_Type;
 417:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 418:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 419:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 420:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 421:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 422:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 423:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 424:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 425:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 426:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 427:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 428:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 429:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 430:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 431:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 432:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 433:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 434:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 435:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 436:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 437:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 438:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 439:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 440:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 441:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 442:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 443:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 444:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 445:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 446:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 447:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 448:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 449:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 450:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 451:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 452:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_core_register
 453:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 454:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR)
 455:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****                 are only accessible over DAP and not via processor. Therefore
 456:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****                 they are not covered by the Cortex-M0 header file.
 457:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 458:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 459:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 460:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 461:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 462:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup    CMSIS_core_register
 463:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup   CMSIS_core_base     Core Definitions
 464:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Definitions for base addresses, unions, and structures.
 465:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   @{
 466:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 467:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 468:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 469:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 470:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 471:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 472:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 473:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 474:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 475:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 476:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 477:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 478:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 479:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*@} */
 480:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 481:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 482:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 483:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /*******************************************************************************
 484:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 485:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 486:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 487:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 488:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 489:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 490:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 491:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** */
 492:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 493:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 494:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 495:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 496:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 497:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 498:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
 499:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     @{
 500:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 501:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 502:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 503:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 504:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  (((uint32_t)(IRQn)       )    &  0x03) * 8 )
 505:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( ((((uint32_t)(IRQn) & 0x0F)-8) >>    2)     )
 506:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   ((uint32_t)(IRQn)            >>    2)     )
 507:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 508:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 509:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Enable External Interrupt
 510:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 511:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
 512:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 513:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
 514:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 515:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 516:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 517:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 518:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 519:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 520:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 521:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Disable External Interrupt
 522:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 523:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
 524:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 525:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
 526:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 527:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 528:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 529:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ICER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 530:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 531:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 532:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 533:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Get Pending Interrupt
 534:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 535:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function reads the pending register in the NVIC and returns the pending bit
 536:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     for the specified interrupt.
 537:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 538:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  Interrupt number.
 539:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 540:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \return             0  Interrupt status is not pending.
 541:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \return             1  Interrupt status is pending.
 542:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 543:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 544:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 545:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   return((uint32_t) ((NVIC->ISPR[0] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));
 546:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 547:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 548:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 549:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Set Pending Interrupt
 550:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 551:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function sets the pending bit of an external interrupt.
 552:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 553:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
 554:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 555:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 556:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 557:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ISPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 558:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 559:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 560:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 561:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Clear Pending Interrupt
 562:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 563:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function clears the pending bit of an external interrupt.
 564:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 565:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
 566:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 567:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 568:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 569:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ICPR[0] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 570:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** }
 571:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 572:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 573:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** /** \brief  Set Interrupt Priority
 574:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 575:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     The function sets the priority of an interrupt.
 576:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 577:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \note The priority cannot be set for every core interrupt.
 578:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** 
 579:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]      IRQn  Interrupt number.
 580:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     \param [in]  priority  Priority to set.
 581:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****  */
 582:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 583:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h **** {
 584:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   if(IRQn < 0) {
  57              		.loc 2 584 0 discriminator 2
  58 000c 4CB2     		sxtb	r4, r1
  59 000e B601     		lsl	r6, r6, #6
  60              	.LVL4:
  61 0010 002C     		cmp	r4, #0
  62 0012 14DA     		bge	.L2
 585:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
  63              		.loc 2 585 0
  64 0014 0F20     		mov	r0, #15
  65 0016 0840     		and	r0, r1
  66 0018 0838     		sub	r0, r0, #8
  67 001a 8408     		lsr	r4, r0, #2
  68 001c 194F     		ldr	r7, .L8+4
  69 001e A500     		lsl	r5, r4, #2
  70 0020 E819     		add	r0, r5, r7
  71 0022 0325     		mov	r5, #3
  72 0024 2940     		and	r1, r5
  73 0026 A940     		lsl	r1, r1, r5
  74 0028 FF25     		mov	r5, #255
  75 002a 4468     		ldr	r4, [r0, #4]
  76 002c 2F1C     		mov	r7, r5
  77 002e 8F40     		lsl	r7, r7, r1
  78 0030 BC43     		bic	r4, r7
 586:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
  79              		.loc 2 586 0
  80 0032 3540     		and	r5, r6
  81 0034 8D40     		lsl	r5, r5, r1
 585:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
  82              		.loc 2 585 0
  83 0036 211C     		mov	r1, r4
  84 0038 2943     		orr	r1, r5
  85 003a 4160     		str	r1, [r0, #4]
  86 003c 13E0     		b	.L3
  87              	.L2:
 587:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   else {
 588:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
  88              		.loc 2 588 0
  89 003e A508     		lsr	r5, r4, #2
  90 0040 1148     		ldr	r0, .L8+8
  91 0042 C035     		add	r5, r5, #192
  92 0044 AC00     		lsl	r4, r5, #2
  93 0046 0325     		mov	r5, #3
  94 0048 2758     		ldr	r7, [r4, r0]
  95 004a 2940     		and	r1, r5
  96 004c A940     		lsl	r1, r1, r5
  97 004e FF25     		mov	r5, #255
  98 0050 0197     		str	r7, [sp, #4]
  99 0052 0091     		str	r1, [sp]
 100 0054 2F1C     		mov	r7, r5
 101 0056 8F40     		lsl	r7, r7, r1
 589:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****         (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
 102              		.loc 2 589 0
 103 0058 3540     		and	r5, r6
 588:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 104              		.loc 2 588 0
 105 005a 0199     		ldr	r1, [sp, #4]
 106              		.loc 2 589 0
 107 005c 009E     		ldr	r6, [sp]
 588:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 108              		.loc 2 588 0
 109 005e B943     		bic	r1, r7
 110              		.loc 2 589 0
 111 0060 B540     		lsl	r5, r5, r6
 588:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
 112              		.loc 2 588 0
 113 0062 2943     		orr	r1, r5
 114 0064 2150     		str	r1, [r4, r0]
 115              	.L3:
 116              	.LBE15:
 117              	.LBE14:
 156:../Dave/Generated/src/NVIC002/NVIC002.c **** 			             Handle->Priority);
 157:../Dave/Generated/src/NVIC002/NVIC002.c **** 	#else 
 158:../Dave/Generated/src/NVIC002/NVIC002.c **** 	   NVIC_SetPriority((IRQn_Type)Handle->NodeID, 
 159:../Dave/Generated/src/NVIC002/NVIC002.c **** 			   	   	     NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 160:../Dave/Generated/src/NVIC002/NVIC002.c **** 			   	   	     Handle->Priority,
 161:../Dave/Generated/src/NVIC002/NVIC002.c **** 			   	   	     Handle->SubPriority));
 162:../Dave/Generated/src/NVIC002/NVIC002.c **** 	#endif
 163:../Dave/Generated/src/NVIC002/NVIC002.c **** 	if(Handle->InterruptEnable == 1)
 118              		.loc 1 163 0
 119 0066 D678     		ldrb	r6, [r2, #3]
 120 0068 012E     		cmp	r6, #1
 121 006a 05D1     		bne	.L4
 122              	.LVL5:
 123              	.LBB16:
 124              	.LBB17:
 125              	.LBB18:
 126              	.LBB19:
 517:C:\DAVE-3.1.10\eclipse\/../CMSIS/Include\core_cm0.h ****   NVIC->ISER[0] = (1 << ((uint32_t)(IRQn) & 0x1F));
 127              		.loc 2 517 0
 128 006c 1078     		ldrb	r0, [r2]
 129 006e 1F22     		mov	r2, #31
 130              	.LVL6:
 131 0070 0240     		and	r2, r0
 132 0072 054C     		ldr	r4, .L8+8
 133 0074 9640     		lsl	r6, r6, r2
 134 0076 2660     		str	r6, [r4]
 135              	.LVL7:
 136              	.L4:
 137 0078 0433     		add	r3, r3, #4
 138              	.LVL8:
 139              	.LBE19:
 140              	.LBE18:
 141              	.LBE17:
 142              	.LBE16:
 143              	.LBE13:
 144              	.LBE12:
 144:../Dave/Generated/src/NVIC002/NVIC002.c ****   for (Count = 0U; Count<(uint32_t)NVIC002_NUM_INSTANCES; Count++)
 145              		.loc 1 144 0 discriminator 2
 146 007a 0C2B     		cmp	r3, #12
 147 007c C2D1     		bne	.L5
 148:../Dave/Generated/src/NVIC002/NVIC002.c **** }
 148              		.loc 1 148 0
 149              		@ sp needed for prologue
 150 007e F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 151              	.L9:
 152              		.align	2
 153              	.L8:
 154 0080 00000000 		.word	NVIC002_HandleArray
 155 0084 18ED00E0 		.word	-536810216
 156 0088 00E100E0 		.word	-536813312
 157              		.cfi_endproc
 158              	.LFE38:
 160              		.text
 161              	.Letext0:
 162              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC1200_series/Include/XMC1200.h"
 163              		.file 4 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 164              		.file 5 "../Dave/Generated/src/NVIC002/../../inc/NVIC002/NVIC002.h"
 165              		.file 6 "../Dave/Generated/src/NVIC002/../../inc/NVIC002/NVIC002_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 NVIC002.c
C:\Users\tomasoat\AppData\Local\Temp\cc9JtgRk.s:18     .text.NVIC002_Init:00000000 $t
C:\Users\tomasoat\AppData\Local\Temp\cc9JtgRk.s:23     .text.NVIC002_Init:00000000 NVIC002_Init
C:\Users\tomasoat\AppData\Local\Temp\cc9JtgRk.s:154    .text.NVIC002_Init:00000080 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e09b9dd5224853206c418479f14d6963
                           .group:00000000 wm4.uc_id.h.35.62dcba5f6261c1436e3866a751c1a98b
                           .group:00000000 wm4.XMC1200.h.45.4c899b4822ac22c0f00d6fd7f173cc96
                           .group:00000000 wm4.core_cm0.h.47.022e66414e77714da7c4b30b3ad99fe8
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.b7b6650bdd2316848d940915272d75b8
                           .group:00000000 wm4.core_cm0.h.135.ca70469f87e143609670bb393bfa6518
                           .group:00000000 wm4.XMC1000_RomFunctionTable.h.31.6d9a94465618f31b040dc9cea9a47ad7
                           .group:00000000 wm4.XMC1200.h.122.96b58b1204def4c9f76341a4e21abaf6
                           .group:00000000 wm4.NVIC002_Conf.h.62.64042456dc7f2eb96fc713abacb4c5d4

UNDEFINED SYMBOLS
NVIC002_HandleArray
